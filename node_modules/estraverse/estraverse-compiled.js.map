{"version":3,"sources":["estraverse.js"],"names":[],"mappings":"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","file":"estraverse-compiled.js","sourcesContent":["/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true, define:true*/\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // and plain browser loading,\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.estraverse = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Syntax,\n        isArray,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP;\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    function ignoreJSHintError() { }\n\n    isArray = Array.isArray;\n    if (!isArray) {\n        isArray = function isArray(array) {\n            return Object.prototype.toString.call(array) === '[object Array]';\n        };\n    }\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    ignoreJSHintError(shallowCopy);\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    function lowerBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                i = current + 1;\n                len -= diff + 1;\n            } else {\n                len = diff;\n            }\n        }\n        return i;\n    }\n    ignoreJSHintError(lowerBound);\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'defaults', 'rest', 'body'],\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'body', 'superClass'],\n        ClassExpression: ['id', 'body', 'superClass'],\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'defaults', 'rest', 'body'],\n        FunctionExpression: ['id', 'params', 'defaults', 'rest', 'body'],\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MethodDefinition: ['key', 'value'],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handlers', 'handler', 'guardedHandlers', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n    };\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = element.wrap || node.type;\n                candidates = VisitorKeys[nodeType];\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (!isArray(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                        continue;\n                    }\n\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if ((nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === candidates[current]) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', null);\n                        } else {\n                            element = new Element(candidate[current2], [key, current2], null, null);\n                        }\n                        worklist.push(element);\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = element.wrap || node.type;\n            candidates = VisitorKeys[nodeType];\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (!isArray(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                    continue;\n                }\n\n                current2 = candidate.length;\n                while ((current2 -= 1) >= 0) {\n                    if (!candidate[current2]) {\n                        continue;\n                    }\n                    if (nodeType === Syntax.ObjectExpression && 'properties' === candidates[current]) {\n                        element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                    } else {\n                        element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                    }\n                    worklist.push(element);\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = '1.5.1-dev';\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"]}