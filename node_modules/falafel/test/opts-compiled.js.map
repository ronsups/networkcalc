{"version":3,"sources":["opts.js"],"names":[],"mappings":"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","file":"opts-compiled.js","sourcesContent":["var falafel = require('../');\nvar test = require('tape');\n\ntest('first opts arg', function (t) {\n    t.plan(5);\n    \n    var src = '(function () {'\n        + 'var xs = [ 1, 2, [ 3, 4 ] ];'\n        + 'var ys = [ 5, 6 ];'\n        + 'g([ xs, ys ]);'\n    + '})()';\n    \n    var output = falafel({ source: src }, function (node) {\n        if (node.type === 'ArrayExpression') {\n            node.update('fn(' + node.source() + ')');\n        }\n    });\n    \n    var arrays = [\n        [ 3, 4 ],\n        [ 1, 2, [ 3, 4 ] ],\n        [ 5, 6 ],\n        [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ],\n    ];\n    \n    Function(['fn','g'], output)(\n        function (xs) {\n            t.same(arrays.shift(), xs);\n            return xs;\n        },\n        function (xs) {\n            t.same(xs, [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ]);\n        }\n    );\n});\n\ntest('opts.source', function (t) {\n    t.plan(5);\n    \n    var src = '(function () {'\n        + 'var xs = [ 1, 2, [ 3, 4 ] ];'\n        + 'var ys = [ 5, 6 ];'\n        + 'g([ xs, ys ]);'\n    + '})()';\n    \n    var output = falafel(undefined, { source: src }, function (node) {\n        if (node.type === 'ArrayExpression') {\n            node.update('fn(' + node.source() + ')');\n        }\n    });\n    \n    var arrays = [\n        [ 3, 4 ],\n        [ 1, 2, [ 3, 4 ] ],\n        [ 5, 6 ],\n        [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ],\n    ];\n    \n    Function(['fn','g'], output)(\n        function (xs) {\n            t.same(arrays.shift(), xs);\n            return xs;\n        },\n        function (xs) {\n            t.same(xs, [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ]);\n        }\n    );\n});\n\ntest('Buffer opts.source', function (t) {\n    t.plan(5);\n    \n    var src = Buffer('(function () {'\n        + 'var xs = [ 1, 2, [ 3, 4 ] ];'\n        + 'var ys = [ 5, 6 ];'\n        + 'g([ xs, ys ]);'\n    + '})()');\n    \n    var output = falafel({ source: src }, function (node) {\n        if (node.type === 'ArrayExpression') {\n            node.update('fn(' + node.source() + ')');\n        }\n    });\n    \n    var arrays = [\n        [ 3, 4 ],\n        [ 1, 2, [ 3, 4 ] ],\n        [ 5, 6 ],\n        [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ],\n    ];\n    \n    Function(['fn','g'], output)(\n        function (xs) {\n            t.same(arrays.shift(), xs);\n            return xs;\n        },\n        function (xs) {\n            t.same(xs, [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ]);\n        }\n    );\n});\n\ntest('Buffer source', function (t) {\n    t.plan(5);\n    \n    var src = Buffer('(function () {'\n        + 'var xs = [ 1, 2, [ 3, 4 ] ];'\n        + 'var ys = [ 5, 6 ];'\n        + 'g([ xs, ys ]);'\n    + '})()');\n    \n    var output = falafel(src, function (node) {\n        if (node.type === 'ArrayExpression') {\n            node.update('fn(' + node.source() + ')');\n        }\n    });\n    \n    var arrays = [\n        [ 3, 4 ],\n        [ 1, 2, [ 3, 4 ] ],\n        [ 5, 6 ],\n        [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ],\n    ];\n    \n    Function(['fn','g'], output)(\n        function (xs) {\n            t.same(arrays.shift(), xs);\n            return xs;\n        },\n        function (xs) {\n            t.same(xs, [ [ 1, 2, [ 3, 4 ] ], [ 5, 6 ] ]);\n        }\n    );\n});\n"]}