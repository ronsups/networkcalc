{"version":3,"sources":["readfile_resolve.js"],"names":[],"mappings":";;AAAA,IAAI,eAAe,QAAQ,KAAR,CAAnB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,UAAU,QAAQ,UAAR,CAAd;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,KAAK,mCAAL,EAA0C,UAAU,CAAV,EAAa;AACnD,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,MAAM,YAAY,mBAAtB;AACA,aAAS,IAAT,CAAe,CAAf,EAAkB;AAAE,eAAO,QAAQ,IAAR,CAAa,CAAb,EAAgB,EAAE,SAAS,GAAX,EAAhB,CAAP;AAA0C;;AAE9D,QAAI,OAAO;AACP,mBAAW,GADJ;AAEP,iBAAS,EAAE,SAAS,IAAX;AAFF,KAAX;AAIA,QAAI,KAAK,aAAa;AAClB,YAAI,EAAE,cAAc,YAAhB;AADc,KAAb,EAEN,EAAE,MAAM,IAAR,EAFM,CAAT;AAGA,eAAW,SAAX,EAAsB,IAAtB,CAA2B,EAA3B,EAA+B,IAA/B,CAAoC,OAAO,UAAU,IAAV,EAAgB;AACvD,iBAAS,CAAC,SAAD,CAAT,EAAqB,IAArB,EAA2B,EAAE,KAAK,GAAP,EAA3B;AACA,iBAAS,GAAT,CAAc,GAAd,EAAmB;AAAE,cAAE,KAAF,CAAQ,GAAR,EAAa,SAAb;AAAyB;AACjD,KAHmC,CAApC;AAIH,CAhBD;;AAkBA,SAAS,UAAT,CAAqB,IAArB,EAA2B;AACvB,WAAO,GAAG,gBAAH,CAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,kBAArB,EAAyC,IAAzC,CAApB,CAAP;AACH;;AAED,SAAS,YAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC;AAC/B,WAAO,GAAG,gBAAH,CAAoB,IAApB,EAA0B,IAA1B,CAA+B,OAA/B,CAAP;AACH","file":"readfile_resolve-compiled.js","sourcesContent":["var staticModule = require('../');\nvar test = require('tape');\nvar concat = require('concat-stream');\nvar quote = require('quote-stream');\nvar through = require('through2');\nvar fs = require('fs');\nvar path = require('path');\nvar resolve = require('resolve');\n\ntest('readFileSync of require.resolve()', function (t) {\n    t.plan(1);\n    var dir = __dirname + '/readfile_resolve';\n    function rres (p) { return resolve.sync(p, { basedir: dir }) }\n    \n    var vars = {\n        __dirname: dir,\n        require: { resolve: rres }\n    };\n    var sm = staticModule({\n        fs: { readFileSync: readFileSync }\n    }, { vars: vars });\n    readStream('main.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        function log (msg) { t.equal(msg, 'amaze\\n') }\n    }));\n});\n\nfunction readStream (file) {\n    return fs.createReadStream(path.join(__dirname, 'readfile_resolve', file));\n}\n\nfunction readFileSync (file, opts) {\n    return fs.createReadStream(file).pipe(quote());\n}\n"]}