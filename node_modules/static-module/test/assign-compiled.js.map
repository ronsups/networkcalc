{"version":3,"sources":["assign.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,eAAe,QAAQ,KAAR,CAAnB;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,QAAL,EAAe,UAAU,CAAV,EAAa;AACxB,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,CAAE,EAAF,EAAM,GAAN,CAAf;AACA,QAAI,KAAK,aAAa;AAClB,cAAM,EAAE,GAAG,CAAL,EAAQ,GAAG,WAAU,CAAV,EAAa;AAAE,uBAAO,IAAI,GAAX;AAAgB,aAA1C;AADY,KAAb,CAAT;AAGA,eAAW,WAAX,EAAwB,IAAxB,CAA6B,EAA7B,EAAiC,IAAjC,CAAsC,OAAO,UAAU,IAAV,EAAgB;AACzD,UAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,MAAd,CAAR,EACI,0BACE,uBAFN;AAIA,iBAAS,CAAC,SAAD,CAAT,EAAqB,IAArB,EAA2B,EAAE,KAAK,GAAP,EAA3B;AACA,iBAAS,GAAT,CAAc,GAAd,EAAmB;AAAE,cAAE,KAAF,CAAQ,GAAR,EAAa,SAAS,KAAT,EAAb;AAAgC;AACxD,KAPqC,CAAtC;AAQH,CAfD;;AAiBA,KAAK,cAAL,EAAqB,UAAU,CAAV,EAAa;AAC9B,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,CAAE,EAAF,EAAM,GAAN,CAAf;AACA,QAAI,KAAK,aAAa;AAClB,cAAM,EAAE,GAAG,CAAL,EAAQ,GAAG,WAAU,CAAV,EAAa;AAAE,uBAAO,IAAI,GAAX;AAAgB,aAA1C;AADY,KAAb,CAAT;AAGA,eAAW,UAAX,EAAuB,IAAvB,CAA4B,EAA5B,EAAgC,IAAhC,CAAqC,OAAO,UAAU,IAAV,EAAgB;AACxD,UAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,MAAd,CAAR,EACI,aACE,uBADF,GAEE,qBAHN;AAKA,iBAAS,CAAC,SAAD,CAAT,EAAqB,IAArB,EAA2B,EAAE,KAAK,GAAP,EAA3B;AACA,iBAAS,GAAT,CAAc,GAAd,EAAmB;AAAE,cAAE,KAAF,CAAQ,GAAR,EAAa,SAAS,KAAT,EAAb;AAAgC;AACxD,KARoC,CAArC;AASH,CAhBD;;AAkBA,SAAS,UAAT,CAAqB,IAArB,EAA2B;AACvB,WAAO,GAAG,gBAAH,CAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,EAA+B,IAA/B,CAApB,CAAP;AACH","file":"assign-compiled.js","sourcesContent":["var test = require('tape');\nvar concat = require('concat-stream');\nvar staticModule = require('../');\nvar fs = require('fs');\nvar path = require('path');\n\ntest('assign', function (t) {\n    t.plan(3);\n    \n    var expected = [ 12, 555 ];\n    var sm = staticModule({\n        beep: { x: 4, f: function (n) { return n * 111 } }\n    });\n    readStream('source.js').pipe(sm).pipe(concat(function (body) {\n        t.equal(body.toString('utf8'),\n            '\\nconsole.log(4 * 3);'\n            + '\\nconsole.log(555);\\n'\n        );\n        Function(['console'],body)({ log: log });\n        function log (msg) { t.equal(msg, expected.shift()) }\n    }));\n});\n\ntest('assign comma', function (t) {\n    t.plan(3);\n    \n    var expected = [ 12, 555 ];\n    var sm = staticModule({\n        beep: { x: 4, f: function (n) { return n * 111 } }\n    });\n    readStream('comma.js').pipe(sm).pipe(concat(function (body) {\n        t.equal(body.toString('utf8'),\n            'x = 5;\\n'\n            + 'console.log(4 * 3);\\n'\n            + 'console.log(555);\\n'\n        );\n        Function(['console'],body)({ log: log });\n        function log (msg) { t.equal(msg, expected.shift()) }\n    }));\n});\n\nfunction readStream (file) {\n    return fs.createReadStream(path.join(__dirname, 'assign', file));\n}\n"]}