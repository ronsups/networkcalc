{"version":3,"sources":["mixed.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,SAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,eAAe,QAAQ,KAAR,CAAnB;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,kCAAL,EAAyC,UAAU,CAAV,EAAa;AAClD,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,CAAE,EAAF,EAAM,YAAN,EAAoB,GAApB,CAAf;AACA,QAAI,KAAK,aAAa;AAClB,cAAM;AACF,eAAG,EAAE,GAAG,EAAE,GAAG,CAAL,EAAL,EADD;AAEF,mBAAO;AACH,sBAAM,cAAU,IAAV,EAAgB;AAClB,2BAAO,GAAG,gBAAH,CAAoB,IAApB,EAA0B,IAA1B,CAA+B,QAA/B,CAAP;AACH;AAHE,aAFL;AAOF,eAAG,EAAE,GAAG,EAAE,GAAG,WAAU,CAAV,EAAa;AAAE,+BAAO,IAAI,GAAX;AAAgB,qBAApC,EAAL;AAPD;AADY,KAAb,EAUN,EAAE,MAAM,EAAE,WAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAb,EAAR,EAVM,CAAT;AAWA,eAAW,WAAX,EAAwB,IAAxB,CAA6B,EAA7B,EAAiC,IAAjC,CAAsC,OAAO,UAAU,IAAV,EAAgB;AACzD,iBAAS,CAAC,SAAD,CAAT,EAAqB,IAArB,EAA2B,EAAE,KAAK,GAAP,EAA3B;AACA,UAAE,KAAF,CACI,KAAK,QAAL,CAAc,MAAd,CADJ,EAEI,0BACE,+BADF,GAEE,uBAJN;AAMA,iBAAS,GAAT,CAAc,GAAd,EAAmB;AAAE,cAAE,KAAF,CAAQ,GAAR,EAAa,SAAS,KAAT,EAAb;AAAgC;AACxD,KATqC,CAAtC;AAUH,CAzBD;;AA2BA,KAAK,2BAAL,EAAkC,UAAU,CAAV,EAAa;AAC3C,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,CAAE,EAAF,EAAM,YAAN,EAAoB,GAApB,CAAf;AACA,QAAI,KAAK,aAAa;AAClB,cAAM;AACF,eAAG,CADD;AAEF,mBAAO,eAAU,IAAV,EAAgB;AACnB,uBAAO,GAAG,gBAAH,CAAoB,IAApB,EAA0B,IAA1B,CAA+B,QAA/B,CAAP;AACH,aAJC;AAKF,eAAG,WAAU,CAAV,EAAa;AAAE,uBAAO,IAAI,GAAX;AAAgB;AALhC;AADY,KAAb,EAQN,EAAE,MAAM,EAAE,WAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAb,EAAR,EARM,CAAT;AASA,eAAW,YAAX,EAAyB,IAAzB,CAA8B,EAA9B,EAAkC,IAAlC,CAAuC,OAAO,UAAU,IAAV,EAAgB;AAC1D,iBAAS,CAAC,SAAD,CAAT,EAAqB,IAArB,EAA2B,EAAE,KAAK,GAAP,EAA3B;AACA,UAAE,KAAF,CACI,KAAK,QAAL,CAAc,MAAd,CADJ,EAEI,0BACE,+BADF,GAEE,uBAJN;AAMA,iBAAS,GAAT,CAAc,GAAd,EAAmB;AAAE,cAAE,KAAF,CAAQ,GAAR,EAAa,SAAS,KAAT,EAAb;AAAgC;AACxD,KATsC,CAAvC;AAUH,CAvBD;;AAyBA,SAAS,UAAT,CAAqB,IAArB,EAA2B;AACvB,WAAO,GAAG,gBAAH,CAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,EAA8B,IAA9B,CAApB,CAAP;AACH","file":"mixed-compiled.js","sourcesContent":["var test = require('tape');\nvar concat = require('concat-stream');\nvar quote = require('quote-stream');\nvar staticModule = require('../');\nvar fs = require('fs');\nvar path = require('path');\n\ntest('mixed nested objects and streams', function (t) {\n    t.plan(4);\n    \n    var expected = [ 12, 'oh hello\\n', 555 ];\n    var sm = staticModule({\n        beep: {\n            x: { y: { z: 4 } },\n            quote: {\n                read: function (file) {\n                    return fs.createReadStream(file).pipe(quote());\n                }\n            },\n            f: { g: { h: function (n) { return n * 111 } } }\n        }\n    }, { vars: { __dirname: path.join(__dirname, 'mixed') } });\n    readStream('source.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        t.equal(\n            body.toString('utf8'),\n            '\\nconsole.log(4 * 3);'\n            + '\\nconsole.log(\"oh hello\\\\n\");'\n            + '\\nconsole.log(555);\\n'\n        );\n        function log (msg) { t.equal(msg, expected.shift()) }\n    }));\n});\n\ntest('mixed objects and streams', function (t) {\n    t.plan(4);\n    \n    var expected = [ 12, 'oh hello\\n', 555 ];\n    var sm = staticModule({\n        beep: {\n            x: 4,\n            quote: function (file) {\n                return fs.createReadStream(file).pipe(quote());\n            },\n            f: function (n) { return n * 111 }\n        }\n    }, { vars: { __dirname: path.join(__dirname, 'mixed') } });\n    readStream('unmixed.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        t.equal(\n            body.toString('utf8'),\n            '\\nconsole.log(4 * 3);'\n            + '\\nconsole.log(\"oh hello\\\\n\");'\n            + '\\nconsole.log(555);\\n'\n        );\n        function log (msg) { t.equal(msg, expected.shift()) }\n    }));\n});\n\nfunction readStream (file) {\n    return fs.createReadStream(path.join(__dirname, 'mixed', file));\n}\n"]}