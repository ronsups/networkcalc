{"version":3,"sources":["log.js"],"names":[],"mappings":";;AAAA,IAAI,eAAe,QAAQ,KAAR,CAAnB;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,KAAK,2BAAL,EAAkC,UAAU,CAAV,EAAa;AAC3C,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,KAAK,aAAa;AAClB,cAAM,gBAAY;AACd,gBAAI,IAAI,OAAR;AACA,cAAE,GAAF,CAAM,KAAN;AACA,mBAAO,CAAP;AACH;AALiB,KAAb,EAMN,EAAE,MAAM,EAAE,WAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,MAArB,CAAb,EAAR,EANM,CAAT;AAOA,eAAW,WAAX,EAAwB,IAAxB,CAA6B,EAA7B,EAAiC,IAAjC,CAAsC,OAAO,UAAU,IAAV,EAAgB;AACzD,UAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,MAAd,CAAR,EAA+B,uBAA/B;AACH,KAFqC,CAAtC;AAGH,CAZD;;AAcA,KAAK,mCAAL,EAA0C,UAAU,CAAV,EAAa;AACnD,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,KAAK,aAAa;AAClB,cAAM,gBAAY;AACd,gBAAI,IAAI,OAAR;AACA,gBAAI,SAAS,CAAE,MAAF,EAAU,OAAV,EAAmB,SAAnB,CAAb;AACA,gBAAI,KAAK,YAAY,YAAY;AAC7B,oBAAI,OAAO,MAAP,KAAkB,CAAtB,EAAyB;AACrB,kCAAc,EAAd;AACA,sBAAE,GAAF;AACH,iBAHD,MAIK,EAAE,KAAF,CAAQ,OAAO,KAAP,EAAR;AACR,aANQ,EAMN,EANM,CAAT;AAOA,mBAAO,CAAP;AACH;AAZiB,KAAb,EAaN,EAAE,MAAM,EAAE,WAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,MAArB,CAAb,EAAR,EAbM,CAAT;AAcA,eAAW,WAAX,EAAwB,IAAxB,CAA6B,EAA7B,EAAiC,IAAjC,CAAsC,OAAO,UAAU,IAAV,EAAgB;AACzD,UAAE,KAAF,CAAQ,KAAK,QAAL,CAAc,MAAd,CAAR,EAA+B,oCAA/B;AACH,KAFqC,CAAtC;AAGH,CAnBD;;AAqBA,SAAS,UAAT,CAAqB,IAArB,EAA2B;AACvB,WAAO,GAAG,gBAAH,CAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,IAA5B,CAApB,CAAP;AACH","file":"log-compiled.js","sourcesContent":["var staticModule = require('../');\nvar test = require('tape');\nvar concat = require('concat-stream');\nvar quote = require('quote-stream');\nvar fs = require('fs');\nvar path = require('path');\n\ntest('stream into a console.log', function (t) {\n    t.plan(1);\n    var sm = staticModule({\n        beep: function () {\n            var q = quote();\n            q.end('eek');\n            return q;\n        }\n    }, { vars: { __dirname: path.join(__dirname, 'brfs') } });\n    readStream('source.js').pipe(sm).pipe(concat(function (body) {\n        t.equal(body.toString('utf8'), 'console.log(\"eek\");\\n');\n    }));\n});\n\ntest('trickle stream into a console.log', function (t) {\n    t.plan(1);\n    var sm = staticModule({\n        beep: function () {\n            var q = quote();\n            var chunks = [ 'beep', ' boop', ' robots' ];\n            var iv = setInterval(function () {\n                if (chunks.length === 0) {\n                    clearInterval(iv);\n                    q.end();\n                }\n                else q.write(chunks.shift());\n            }, 10);\n            return q;\n        }\n    }, { vars: { __dirname: path.join(__dirname, 'brfs') } });\n    readStream('source.js').pipe(sm).pipe(concat(function (body) {\n        t.equal(body.toString('utf8'), 'console.log(\"beep boop robots\");\\n');\n    }));\n});\n\nfunction readStream (file) {\n    return fs.createReadStream(path.join(__dirname, 'log', file));\n}\n"]}