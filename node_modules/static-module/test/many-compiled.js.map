{"version":3,"sources":["many.js"],"names":[],"mappings":"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","file":"many-compiled.js","sourcesContent":["var test = require('tape');\nvar concat = require('concat-stream');\nvar quote = require('quote-stream');\nvar staticModule = require('../');\nvar fs = require('fs');\nvar path = require('path');\n\ntest('many instances', function (t) {\n    t.plan(2);\n    \n    var sm = staticModule({\n        fs: { readFileSync: function (file) {\n            return fs.createReadStream(file).pipe(quote());\n        } }\n    }, { vars: { __dirname: path.join(__dirname, 'many') } });\n    readStream('source.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        t.equal(\n            body.toString('utf8'),\n            '\\nvar a = \"A!\\\\n\";\\n'\n            + 'var b = \"B!\\\\n\";\\n'\n            + 'var c = \"C!\\\\n\";\\n'\n            + 'console.log(a + b + c);\\n'\n        );\n        function log (msg) { t.equal(msg, 'A!\\nB!\\nC!\\n') }\n    }));\n});\n\ntest('expansions inline', function (t) {\n    t.plan(2);\n    \n    var sm = staticModule({\n        fs: { readFileSync: function (file) {\n            return fs.createReadStream(file).pipe(quote());\n        } }\n    }, { vars: { __dirname: path.join(__dirname, 'many') } });\n    readStream('inline.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        t.equal(\n            body.toString('utf8'),\n            '\\nvar a = \"A!\\\\n\",\\n'\n            + '    b = \"B!\\\\n\",\\n'\n            + '    c = \"C!\\\\n\"\\n'\n            + ';\\n'\n            + 'console.log(a + b + c);\\n'\n        );\n        function log (msg) { t.equal(msg, 'A!\\nB!\\nC!\\n') }\n    }));\n});\n\ntest('all inline', function (t) {\n    t.plan(2);\n    \n    var sm = staticModule({\n        fs: { readFileSync: function (file) {\n            return fs.createReadStream(file).pipe(quote());\n        } }\n    }, { vars: { __dirname: path.join(__dirname, 'many') } });\n    readStream('all_inline.js').pipe(sm).pipe(concat(function (body) {\n        Function(['console'],body)({ log: log });\n        t.equal(\n            body.toString('utf8').replace(/;/g,''),\n            'var a = \"A!\\\\n\",\\n'\n            + '    b = \"B!\\\\n\",\\n'\n            + '    c = \"C!\\\\n\"\\n'\n            + 'console.log(a + b + c)\\n'\n        );\n        function log (msg) { t.equal(msg, 'A!\\nB!\\nC!\\n') }\n    }));\n});\n\nfunction readStream (file) {\n    return fs.createReadStream(path.join(__dirname, 'many', file));\n}\n"]}