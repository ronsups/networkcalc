{"version":3,"sources":["esparse.js"],"names":[],"mappings":"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","file":"esparse-compiled.js","sourcesContent":["#!/usr/bin/env node\n/*\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint sloppy:true node:true rhino:true */\n\nvar fs, esprima, fname, content, options, syntax;\n\nif (typeof require === 'function') {\n    fs = require('fs');\n    esprima = require('esprima');\n} else if (typeof load === 'function') {\n    try {\n        load('esprima.js');\n    } catch (e) {\n        load('../esprima.js');\n    }\n}\n\n// Shims to Node.js objects when running under Rhino.\nif (typeof console === 'undefined' && typeof process === 'undefined') {\n    console = { log: print };\n    fs = { readFileSync: readFile };\n    process = { argv: arguments, exit: quit };\n    process.argv.unshift('esparse.js');\n    process.argv.unshift('rhino');\n}\n\nfunction showUsage() {\n    console.log('Usage:');\n    console.log('   esparse [options] file.js');\n    console.log();\n    console.log('Available options:');\n    console.log();\n    console.log('  --comment      Gather all line and block comments in an array');\n    console.log('  --loc          Include line-column location info for each syntax node');\n    console.log('  --range        Include index-based range for each syntax node');\n    console.log('  --raw          Display the raw value of literals');\n    console.log('  --tokens       List all tokens in an array');\n    console.log('  --tolerant     Tolerate errors on a best-effort basis (experimental)');\n    console.log('  -v, --version  Shows program version');\n    console.log();\n    process.exit(1);\n}\n\nif (process.argv.length <= 2) {\n    showUsage();\n}\n\noptions = {};\n\nprocess.argv.splice(2).forEach(function (entry) {\n\n    if (entry === '-h' || entry === '--help') {\n        showUsage();\n    } else if (entry === '-v' || entry === '--version') {\n        console.log('ECMAScript Parser (using Esprima version', esprima.version, ')');\n        console.log();\n        process.exit(0);\n    } else if (entry === '--comment') {\n        options.comment = true;\n    } else if (entry === '--loc') {\n        options.loc = true;\n    } else if (entry === '--range') {\n        options.range = true;\n    } else if (entry === '--raw') {\n        options.raw = true;\n    } else if (entry === '--tokens') {\n        options.tokens = true;\n    } else if (entry === '--tolerant') {\n        options.tolerant = true;\n    } else if (entry.slice(0, 2) === '--') {\n        console.log('Error: unknown option ' + entry + '.');\n        process.exit(1);\n    } else if (typeof fname === 'string') {\n        console.log('Error: more than one input file.');\n        process.exit(1);\n    } else {\n        fname = entry;\n    }\n});\n\nif (typeof fname !== 'string') {\n    console.log('Error: no input file.');\n    process.exit(1);\n}\n\ntry {\n    content = fs.readFileSync(fname, 'utf-8');\n    syntax = esprima.parse(content, options);\n    console.log(JSON.stringify(syntax, null, 4));\n} catch (e) {\n    console.log('Error: ' + e.message);\n    process.exit(1);\n}\n"]}