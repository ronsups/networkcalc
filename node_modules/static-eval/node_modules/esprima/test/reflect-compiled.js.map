{"version":3,"sources":["reflect.js"],"names":[],"mappings":"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","file":"reflect-compiled.js","sourcesContent":["// This is modified from Mozilla Reflect.parse test suite (the file is located\n// at js/src/tests/js1_8_5/extensions/reflect-parse.js in the source tree).\n//\n// Some notable changes:\n//   * Removed unsupported features (destructuring, let, comprehensions...).\n//   * Removed tests for E4X (ECMAScript for XML).\n//   * Removed everything related to builder.\n//   * Enclosed every 'Pattern' construct with a scope.\n//   * Tweaked some expected tree to remove generator field.\n//   * Removed the test for bug 632030 and bug 632024.\n\n/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\n/*\n * Any copyright is dedicated to the Public Domain.\n * http://creativecommons.org/licenses/publicdomain/\n */\n\n(function (exports) {\n\nfunction testReflect(Reflect, Pattern) {\n\nfunction program(elts) { return Pattern({ type: \"Program\", body: elts }) }\nfunction exprStmt(expr) { return Pattern({ type: \"ExpressionStatement\", expression: expr }) }\nfunction throwStmt(expr) { return Pattern({ type: \"ThrowStatement\", argument: expr }) }\nfunction returnStmt(expr) { return Pattern({ type: \"ReturnStatement\", argument: expr }) }\nfunction yieldExpr(expr) { return Pattern({ type: \"YieldExpression\", argument: expr }) }\nfunction lit(val) { return Pattern({ type: \"Literal\", value: val }) }\nvar thisExpr = Pattern({ type: \"ThisExpression\" });\nfunction funDecl(id, params, body) { return Pattern({ type: \"FunctionDeclaration\",\n                                             id: id,\n                                             params: params,\n                                             defaults: [],\n                                             body: body,\n                                             rest: null,\n                                             generator: false,\n                                             expression: false\n                                             }) }\nfunction genFunDecl(id, params, body) { return Pattern({ type: \"FunctionDeclaration\",\n                                                id: id,\n                                                params: params,\n                                                defaults: [],\n                                                body: body,\n                                                rest: null,\n                                                generator: false,\n                                                expression: false\n                                                }) }\nfunction declarator(id, init) { return Pattern({ type: \"VariableDeclarator\", id: id, init: init }) }\nfunction varDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"var\" }) }\nfunction letDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"let\" }) }\nfunction constDecl(decls) { return Pattern({ type: \"VariableDeclaration\", declarations: decls, kind: \"const\" }) }\nfunction ident(name) { return Pattern({ type: \"Identifier\", name: name }) }\nfunction dotExpr(obj, id) { return Pattern({ type: \"MemberExpression\", computed: false, object: obj, property: id }) }\nfunction memExpr(obj, id) { return Pattern({ type: \"MemberExpression\", computed: true, object: obj, property: id }) }\nfunction forStmt(init, test, update, body) { return Pattern({ type: \"ForStatement\", init: init, test: test, update: update, body: body }) }\nfunction forInStmt(lhs, rhs, body) { return Pattern({ type: \"ForInStatement\", left: lhs, right: rhs, body: body, each: false }) }\nfunction forEachInStmt(lhs, rhs, body) { return Pattern({ type: \"ForInStatement\", left: lhs, right: rhs, body: body, each: true }) }\nfunction breakStmt(lab) { return Pattern({ type: \"BreakStatement\", label: lab }) }\nfunction continueStmt(lab) { return Pattern({ type: \"ContinueStatement\", label: lab }) }\nfunction blockStmt(body) { return Pattern({ type: \"BlockStatement\", body: body }) }\nvar emptyStmt = Pattern({ type: \"EmptyStatement\" });\nfunction ifStmt(test, cons, alt) { return Pattern({ type: \"IfStatement\", test: test, alternate: alt, consequent: cons }) }\nfunction labStmt(lab, stmt) { return Pattern({ type: \"LabeledStatement\", label: lab, body: stmt }) }\nfunction withStmt(obj, stmt) { return Pattern({ type: \"WithStatement\", object: obj, body: stmt }) }\nfunction whileStmt(test, stmt) { return Pattern({ type: \"WhileStatement\", test: test, body: stmt }) }\nfunction doStmt(stmt, test) { return Pattern({ type: \"DoWhileStatement\", test: test, body: stmt }) }\nfunction switchStmt(disc, cases) { return Pattern({ type: \"SwitchStatement\", discriminant: disc, cases: cases }) }\nfunction caseClause(test, stmts) { return Pattern({ type: \"SwitchCase\", test: test, consequent: stmts }) }\nfunction defaultClause(stmts) { return Pattern({ type: \"SwitchCase\", test: null, consequent: stmts }) }\nfunction catchClause(id, guard, body) { if (guard) { return Pattern({ type: \"GuardedCatchClause\", param: id, guard: guard, body: body }) } else { return Pattern({ type: \"CatchClause\", param: id, body: body }) } }\nfunction tryStmt(body, guarded, catches, fin) { return Pattern({ type: \"TryStatement\", block: body, guardedHandlers: guarded, handlers: catches, finalizer: fin }) }\nfunction letStmt(head, body) { return Pattern({ type: \"LetStatement\", head: head, body: body }) }\nfunction funExpr(id, args, body, gen) { return Pattern({ type: \"FunctionExpression\",\n                                                id: id,\n                                                params: args,\n                                                defaults: [],\n                                                body: body,\n                                                rest: null,\n                                                generator: false,\n                                                expression: false\n                                                }) }\nfunction genFunExpr(id, args, body) { return Pattern({ type: \"FunctionExpression\",\n                                              id: id,\n                                              params: args,\n                                              defaults: [],\n                                              body: body,\n                                              rest: null,\n                                              generator: false,\n                                              expression: false\n                                              }) }\n\nfunction unExpr(op, arg) { return Pattern({ type: \"UnaryExpression\", operator: op, argument: arg, prefix: true }) }\nfunction binExpr(op, left, right) { return Pattern({ type: \"BinaryExpression\", operator: op, left: left, right: right }) }\nfunction aExpr(op, left, right) { return Pattern({ type: \"AssignmentExpression\", operator: op, left: left, right: right }) }\nfunction updExpr(op, arg, prefix) { return Pattern({ type: \"UpdateExpression\", operator: op, argument: arg, prefix: prefix }) }\nfunction logExpr(op, left, right) { return Pattern({ type: \"LogicalExpression\", operator: op, left: left, right: right }) }\n\nfunction condExpr(test, cons, alt) { return Pattern({ type: \"ConditionalExpression\", test: test, consequent: cons, alternate: alt }) }\nfunction seqExpr(exprs) { return Pattern({ type: \"SequenceExpression\", expressions: exprs }) }\nfunction newExpr(callee, args) { return Pattern({ type: \"NewExpression\", callee: callee, arguments: args }) }\nfunction callExpr(callee, args) { return Pattern({ type: \"CallExpression\", callee: callee, arguments: args }) }\nfunction arrExpr(elts) { return Pattern({ type: \"ArrayExpression\", elements: elts }) }\nfunction objExpr(elts) { return Pattern({ type: \"ObjectExpression\", properties: elts }) }\nfunction objProp(key, value, kind) { return Pattern({ type: \"Property\", key: key, value: value, kind: kind }) }\n\nfunction arrPatt(elts) { return Pattern({ type: \"ArrayPattern\", elements: elts }) }\nfunction objPatt(elts) { return Pattern({ type: \"ObjectPattern\", properties: elts }) }\n\nfunction localSrc(src) { return \"(function(){ \" + src + \" })\" }\nfunction localPatt(patt) { return program([exprStmt(funExpr(null, [], blockStmt([patt])))]) }\nfunction blockSrc(src) { return \"(function(){ { \" + src + \" } })\" }\nfunction blockPatt(patt) { return program([exprStmt(funExpr(null, [], blockStmt([blockStmt([patt])])))]) }\n\nfunction assertBlockStmt(src, patt) {\n    blockPatt(patt).assert(Reflect.parse(blockSrc(src)));\n}\n\nfunction assertBlockExpr(src, patt) {\n    assertBlockStmt(src, exprStmt(patt));\n}\n\nfunction assertBlockDecl(src, patt, builder) {\n    blockPatt(patt).assert(Reflect.parse(blockSrc(src), {builder: builder}));\n}\n\nfunction assertLocalStmt(src, patt) {\n    localPatt(patt).assert(Reflect.parse(localSrc(src)));\n}\n\nfunction assertLocalExpr(src, patt) {\n    assertLocalStmt(src, exprStmt(patt));\n}\n\nfunction assertLocalDecl(src, patt) {\n    localPatt(patt).assert(Reflect.parse(localSrc(src)));\n}\n\nfunction assertGlobalStmt(src, patt, builder) {\n    program([patt]).assert(Reflect.parse(src, {builder: builder}));\n}\n\nfunction assertGlobalExpr(src, patt, builder) {\n    program([exprStmt(patt)]).assert(Reflect.parse(src, {builder: builder}));\n    //assertStmt(src, exprStmt(patt));\n}\n\nfunction assertGlobalDecl(src, patt) {\n    program([patt]).assert(Reflect.parse(src));\n}\n\nfunction assertProg(src, patt) {\n    program(patt).assert(Reflect.parse(src));\n}\n\nfunction assertStmt(src, patt) {\n    assertLocalStmt(src, patt);\n    assertGlobalStmt(src, patt);\n    assertBlockStmt(src, patt);\n}\n\nfunction assertExpr(src, patt) {\n    assertLocalExpr(src, patt);\n    assertGlobalExpr(src, patt);\n    assertBlockExpr(src, patt);\n}\n\nfunction assertDecl(src, patt) {\n    assertLocalDecl(src, patt);\n    assertGlobalDecl(src, patt);\n    assertBlockDecl(src, patt);\n}\n\nfunction assertError(src, errorType) {\n    try {\n        Reflect.parse(src);\n    } catch (e) {\n        return;\n    }\n    throw new Error(\"expected \" + errorType.name + \" for \" + uneval(src));\n}\n\n\n// general tests\n\n// NB: These are useful but for now jit-test doesn't do I/O reliably.\n\n//program(_).assert(Reflect.parse(snarf('data/flapjax.txt')));\n//program(_).assert(Reflect.parse(snarf('data/jquery-1.4.2.txt')));\n//program(_).assert(Reflect.parse(snarf('data/prototype.js')));\n//program(_).assert(Reflect.parse(snarf('data/dojo.js.uncompressed.js')));\n//program(_).assert(Reflect.parse(snarf('data/mootools-1.2.4-core-nc.js')));\n\n\n// declarations\n\nassertDecl(\"var x = 1, y = 2, z = 3\",\n           varDecl([declarator(ident(\"x\"), lit(1)),\n                    declarator(ident(\"y\"), lit(2)),\n                    declarator(ident(\"z\"), lit(3))]));\nassertDecl(\"var x, y, z\",\n           varDecl([declarator(ident(\"x\"), null),\n                    declarator(ident(\"y\"), null),\n                    declarator(ident(\"z\"), null)]));\nassertDecl(\"function foo() { }\",\n           funDecl(ident(\"foo\"), [], blockStmt([])));\nassertDecl(\"function foo() { return 42 }\",\n           funDecl(ident(\"foo\"), [], blockStmt([returnStmt(lit(42))])));\n\n\n// Bug 591437: rebound args have their defs turned into uses\nassertDecl(\"function f(a) { function a() { } }\",\n           funDecl(ident(\"f\"), [ident(\"a\")], blockStmt([funDecl(ident(\"a\"), [], blockStmt([]))])));\nassertDecl(\"function f(a,b,c) { function b() { } }\",\n           funDecl(ident(\"f\"), [ident(\"a\"),ident(\"b\"),ident(\"c\")], blockStmt([funDecl(ident(\"b\"), [], blockStmt([]))])));\n\n// expressions\n\nassertExpr(\"true\", lit(true));\nassertExpr(\"false\", lit(false));\nassertExpr(\"42\", lit(42));\nassertExpr(\"(/asdf/)\", lit(/asdf/));\nassertExpr(\"this\", thisExpr);\nassertExpr(\"foo\", ident(\"foo\"));\nassertExpr(\"foo.bar\", dotExpr(ident(\"foo\"), ident(\"bar\")));\nassertExpr(\"foo[bar]\", memExpr(ident(\"foo\"), ident(\"bar\")));\nassertExpr(\"(function(){})\", funExpr(null, [], blockStmt([])));\nassertExpr(\"(function f() {})\", funExpr(ident(\"f\"), [], blockStmt([])));\nassertExpr(\"(function f(x,y,z) {})\", funExpr(ident(\"f\"), [ident(\"x\"),ident(\"y\"),ident(\"z\")], blockStmt([])));\nassertExpr(\"(++x)\", updExpr(\"++\", ident(\"x\"), true));\nassertExpr(\"(x++)\", updExpr(\"++\", ident(\"x\"), false));\nassertExpr(\"(+x)\", unExpr(\"+\", ident(\"x\")));\nassertExpr(\"(-x)\", unExpr(\"-\", ident(\"x\")));\nassertExpr(\"(!x)\", unExpr(\"!\", ident(\"x\")));\nassertExpr(\"(~x)\", unExpr(\"~\", ident(\"x\")));\nassertExpr(\"(delete x)\", unExpr(\"delete\", ident(\"x\")));\nassertExpr(\"(typeof x)\", unExpr(\"typeof\", ident(\"x\")));\nassertExpr(\"(void x)\", unExpr(\"void\", ident(\"x\")));\nassertExpr(\"(x == y)\", binExpr(\"==\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x != y)\", binExpr(\"!=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x === y)\", binExpr(\"===\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x !== y)\", binExpr(\"!==\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x < y)\", binExpr(\"<\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x <= y)\", binExpr(\"<=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x > y)\", binExpr(\">\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >= y)\", binExpr(\">=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x << y)\", binExpr(\"<<\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >> y)\", binExpr(\">>\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>> y)\", binExpr(\">>>\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x + y)\", binExpr(\"+\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w + x + y + z)\", binExpr(\"+\", binExpr(\"+\", binExpr(\"+\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")));\nassertExpr(\"(x - y)\", binExpr(\"-\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w - x - y - z)\", binExpr(\"-\", binExpr(\"-\", binExpr(\"-\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")));\nassertExpr(\"(x * y)\", binExpr(\"*\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x / y)\", binExpr(\"/\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x % y)\", binExpr(\"%\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x | y)\", binExpr(\"|\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x ^ y)\", binExpr(\"^\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x & y)\", binExpr(\"&\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x in y)\", binExpr(\"in\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x instanceof y)\", binExpr(\"instanceof\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x = y)\", aExpr(\"=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x += y)\", aExpr(\"+=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x -= y)\", aExpr(\"-=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x *= y)\", aExpr(\"*=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x /= y)\", aExpr(\"/=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x %= y)\", aExpr(\"%=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x <<= y)\", aExpr(\"<<=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>= y)\", aExpr(\">>=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x >>>= y)\", aExpr(\">>>=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x |= y)\", aExpr(\"|=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x ^= y)\", aExpr(\"^=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x &= y)\", aExpr(\"&=\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x || y)\", logExpr(\"||\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(x && y)\", logExpr(\"&&\", ident(\"x\"), ident(\"y\")));\nassertExpr(\"(w || x || y || z)\", logExpr(\"||\", logExpr(\"||\", logExpr(\"||\", ident(\"w\"), ident(\"x\")), ident(\"y\")), ident(\"z\")))\nassertExpr(\"(x ? y : z)\", condExpr(ident(\"x\"), ident(\"y\"), ident(\"z\")));\nassertExpr(\"(x,y)\", seqExpr([ident(\"x\"),ident(\"y\")]))\nassertExpr(\"(x,y,z)\", seqExpr([ident(\"x\"),ident(\"y\"),ident(\"z\")]))\nassertExpr(\"(a,b,c,d,e,f,g)\", seqExpr([ident(\"a\"),ident(\"b\"),ident(\"c\"),ident(\"d\"),ident(\"e\"),ident(\"f\"),ident(\"g\")]));\nassertExpr(\"(new Object)\", newExpr(ident(\"Object\"), []));\nassertExpr(\"(new Object())\", newExpr(ident(\"Object\"), []));\nassertExpr(\"(new Object(42))\", newExpr(ident(\"Object\"), [lit(42)]));\nassertExpr(\"(new Object(1,2,3))\", newExpr(ident(\"Object\"), [lit(1),lit(2),lit(3)]));\nassertExpr(\"(String())\", callExpr(ident(\"String\"), []));\nassertExpr(\"(String(42))\", callExpr(ident(\"String\"), [lit(42)]));\nassertExpr(\"(String(1,2,3))\", callExpr(ident(\"String\"), [lit(1),lit(2),lit(3)]));\nassertExpr(\"[]\", arrExpr([]));\nassertExpr(\"[1]\", arrExpr([lit(1)]));\nassertExpr(\"[1,2]\", arrExpr([lit(1),lit(2)]));\nassertExpr(\"[1,2,3]\", arrExpr([lit(1),lit(2),lit(3)]));\nassertExpr(\"[1,,2,3]\", arrExpr([lit(1),,lit(2),lit(3)]));\nassertExpr(\"[1,,,2,3]\", arrExpr([lit(1),,,lit(2),lit(3)]));\nassertExpr(\"[1,,,2,,3]\", arrExpr([lit(1),,,lit(2),,lit(3)]));\nassertExpr(\"[1,,,2,,,3]\", arrExpr([lit(1),,,lit(2),,,lit(3)]));\nassertExpr(\"[,1,2,3]\", arrExpr([,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,1,2,3]\", arrExpr([,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3]\", arrExpr([,,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3,]\", arrExpr([,,,lit(1),lit(2),lit(3)]));\nassertExpr(\"[,,,1,2,3,,]\", arrExpr([,,,lit(1),lit(2),lit(3),undefined]));\nassertExpr(\"[,,,1,2,3,,,]\", arrExpr([,,,lit(1),lit(2),lit(3),undefined,undefined]));\nassertExpr(\"[,,,,,]\", arrExpr([undefined,undefined,undefined,undefined,undefined]));\nassertExpr(\"({})\", objExpr([]));\nassertExpr(\"({x:1})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\")]));\nassertExpr(\"({x:1, y:2})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                    objProp(ident(\"y\"), lit(2), \"init\")]));\nassertExpr(\"({x:1, y:2, z:3})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                         objProp(ident(\"y\"), lit(2), \"init\"),\n                                         objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({x:1, 'y':2, z:3})\", objExpr([objProp(ident(\"x\"), lit(1), \"init\"),\n                                           objProp(lit(\"y\"), lit(2), \"init\"),\n                                           objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({'x':1, 'y':2, z:3})\", objExpr([objProp(lit(\"x\"), lit(1), \"init\"),\n                                             objProp(lit(\"y\"), lit(2), \"init\"),\n                                             objProp(ident(\"z\"), lit(3), \"init\") ]));\nassertExpr(\"({'x':1, 'y':2, 3:3})\", objExpr([objProp(lit(\"x\"), lit(1), \"init\"),\n                                             objProp(lit(\"y\"), lit(2), \"init\"),\n                                             objProp(lit(3), lit(3), \"init\") ]));\n\n// Bug 571617: eliminate constant-folding\nassertExpr(\"2 + 3\", binExpr(\"+\", lit(2), lit(3)));\n\n// Bug 632026: constant-folding\nassertExpr(\"typeof(0?0:a)\", unExpr(\"typeof\", condExpr(lit(0), lit(0), ident(\"a\"))));\n\n// Bug 632056: constant-folding\nprogram([exprStmt(ident(\"f\")),\n         ifStmt(lit(1),\n                funDecl(ident(\"f\"), [], blockStmt([])),\n                null)]).assert(Reflect.parse(\"f; if (1) function f(){}\"));\n\n// statements\n\nassertStmt(\"throw 42\", throwStmt(lit(42)));\nassertStmt(\"for (;;) break\", forStmt(null, null, null, breakStmt(null)));\nassertStmt(\"for (x; y; z) break\", forStmt(ident(\"x\"), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x; y; z) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x = 42; y; z) break\", forStmt(varDecl([declarator(ident(\"x\"), lit(42))]), ident(\"y\"), ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (x; ; z) break\", forStmt(ident(\"x\"), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x; ; z) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (var x = 42; ; z) break\", forStmt(varDecl([declarator(ident(\"x\"), lit(42))]), null, ident(\"z\"), breakStmt(null)));\nassertStmt(\"for (x; y; ) break\", forStmt(ident(\"x\"), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x; y; ) break\", forStmt(varDecl([declarator(ident(\"x\"), null)]), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x = 42; y; ) break\", forStmt(varDecl([declarator(ident(\"x\"),lit(42))]), ident(\"y\"), null, breakStmt(null)));\nassertStmt(\"for (var x in y) break\", forInStmt(varDecl([declarator(ident(\"x\"),null)]), ident(\"y\"), breakStmt(null)));\nassertStmt(\"for (x in y) break\", forInStmt(ident(\"x\"), ident(\"y\"), breakStmt(null)));\nassertStmt(\"{ }\", blockStmt([]));\nassertStmt(\"{ throw 1; throw 2; throw 3; }\", blockStmt([ throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]));\nassertStmt(\";\", emptyStmt);\nassertStmt(\"if (foo) throw 42;\", ifStmt(ident(\"foo\"), throwStmt(lit(42)), null));\nassertStmt(\"if (foo) throw 42; else true;\", ifStmt(ident(\"foo\"), throwStmt(lit(42)), exprStmt(lit(true))));\nassertStmt(\"if (foo) { throw 1; throw 2; throw 3; }\",\n           ifStmt(ident(\"foo\"),\n                  blockStmt([throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]),\n                  null));\nassertStmt(\"if (foo) { throw 1; throw 2; throw 3; } else true;\",\n           ifStmt(ident(\"foo\"),\n                  blockStmt([throwStmt(lit(1)), throwStmt(lit(2)), throwStmt(lit(3))]),\n                  exprStmt(lit(true))));\nassertStmt(\"foo: for(;;) break foo;\", labStmt(ident(\"foo\"), forStmt(null, null, null, breakStmt(ident(\"foo\")))));\nassertStmt(\"foo: for(;;) continue foo;\", labStmt(ident(\"foo\"), forStmt(null, null, null, continueStmt(ident(\"foo\")))));\nassertStmt(\"with (obj) { }\", withStmt(ident(\"obj\"), blockStmt([])));\nassertStmt(\"with (obj) { obj; }\", withStmt(ident(\"obj\"), blockStmt([exprStmt(ident(\"obj\"))])));\nassertStmt(\"while (foo) { }\", whileStmt(ident(\"foo\"), blockStmt([])));\nassertStmt(\"while (foo) { foo; }\", whileStmt(ident(\"foo\"), blockStmt([exprStmt(ident(\"foo\"))])));\nassertStmt(\"do { } while (foo);\", doStmt(blockStmt([]), ident(\"foo\")));\nassertStmt(\"do { foo; } while (foo)\", doStmt(blockStmt([exprStmt(ident(\"foo\"))]), ident(\"foo\")));\nassertStmt(\"switch (foo) { case 1: 1; break; case 2: 2; break; default: 3; }\",\n           switchStmt(ident(\"foo\"),\n                      [ caseClause(lit(1), [ exprStmt(lit(1)), breakStmt(null) ]),\n                        caseClause(lit(2), [ exprStmt(lit(2)), breakStmt(null) ]),\n                        defaultClause([ exprStmt(lit(3)) ]) ]));\nassertStmt(\"switch (foo) { case 1: 1; break; case 2: 2; break; default: 3; case 42: 42; }\",\n           switchStmt(ident(\"foo\"),\n                      [ caseClause(lit(1), [ exprStmt(lit(1)), breakStmt(null) ]),\n                        caseClause(lit(2), [ exprStmt(lit(2)), breakStmt(null) ]),\n                        defaultClause([ exprStmt(lit(3)) ]),\n                        caseClause(lit(42), [ exprStmt(lit(42)) ]) ]));\nassertStmt(\"try { } catch (e) { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [ catchClause(ident(\"e\"), null, blockStmt([])) ],\n                   null));\nassertStmt(\"try { } catch (e) { } finally { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [ catchClause(ident(\"e\"), null, blockStmt([])) ],\n                   blockStmt([])));\nassertStmt(\"try { } finally { }\",\n           tryStmt(blockStmt([]),\n                   [],\n                   [],\n                   blockStmt([])));\n\n// redeclarations (TOK_NAME nodes with lexdef)\n\nassertStmt(\"function f() { function g() { } function g() { } }\",\n           funDecl(ident(\"f\"), [], blockStmt([funDecl(ident(\"g\"), [], blockStmt([])),\n                                              funDecl(ident(\"g\"), [], blockStmt([]))])));\n\nassertStmt(\"function f() { function g() { } function g() { return 42 } }\",\n           funDecl(ident(\"f\"), [], blockStmt([funDecl(ident(\"g\"), [], blockStmt([])),\n                                              funDecl(ident(\"g\"), [], blockStmt([returnStmt(lit(42))]))])));\n\nassertStmt(\"function f() { var x = 42; var x = 43; }\",\n           funDecl(ident(\"f\"), [], blockStmt([varDecl([declarator(ident(\"x\"),lit(42))]),\n                                              varDecl([declarator(ident(\"x\"),lit(43))])])));\n\n// getters and setters\n\n assertExpr(\"({ get x() { return 42 } })\",\n            objExpr([ objProp(ident(\"x\"),\n                              funExpr(null, [], blockStmt([returnStmt(lit(42))])),\n                              \"get\" ) ]));\n assertExpr(\"({ set x(v) { return 42 } })\",\n            objExpr([ objProp(ident(\"x\"),\n                              funExpr(null, [ident(\"v\")], blockStmt([returnStmt(lit(42))])),\n                              \"set\" ) ]));\n\n}\n\nexports.testReflect = testReflect;\n\n}(typeof exports === 'undefined' ? this : exports));\n"]}