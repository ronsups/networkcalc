{"version":3,"sources":["test-source-node.js"],"names":[],"mappings":"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","file":"test-source-node-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceNode = require('../../lib/source-map/source-node').SourceNode;\n\n  function forEachNewline(fn) {\n    return function (assert, util) {\n      ['\\n', '\\r\\n'].forEach(fn.bind(null, assert, util));\n    }\n  }\n\n  exports['test .add()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Adding a string works.\n    node.add('function noop() {}');\n\n    // Adding another source node works.\n    node.add(new SourceNode(null, null, null));\n\n    // Adding an array works.\n    node.add(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n\n    // Adding other stuff doesn't.\n    assert.throws(function () {\n      node.add({});\n    });\n    assert.throws(function () {\n      node.add(function () {});\n    });\n  };\n\n  exports['test .prepend()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null);\n\n    // Prepending a string works.\n    node.prepend('function noop() {}');\n    assert.equal(node.children[0], 'function noop() {}');\n    assert.equal(node.children.length, 1);\n\n    // Prepending another source node works.\n    node.prepend(new SourceNode(null, null, null));\n    assert.equal(node.children[0], '');\n    assert.equal(node.children[1], 'function noop() {}');\n    assert.equal(node.children.length, 2);\n\n    // Prepending an array works.\n    node.prepend(['function foo() {',\n              new SourceNode(null, null, null,\n                             'return 10;'),\n              '}']);\n    assert.equal(node.children[0], 'function foo() {');\n    assert.equal(node.children[1], 'return 10;');\n    assert.equal(node.children[2], '}');\n    assert.equal(node.children[3], '');\n    assert.equal(node.children[4], 'function noop() {}');\n    assert.equal(node.children.length, 5);\n\n    // Prepending other stuff doesn't.\n    assert.throws(function () {\n      node.prepend({});\n    });\n    assert.throws(function () {\n      node.prepend(function () {});\n    });\n  };\n\n  exports['test .toString()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['function foo() {',\n                                  new SourceNode(null, null, null, 'return 10;'),\n                                  '}'])).toString(),\n                 'function foo() {return 10;}');\n  };\n\n  exports['test .join()'] = function (assert, util) {\n    assert.equal((new SourceNode(null, null, null,\n                                 ['a', 'b', 'c', 'd'])).join(', ').toString(),\n                 'a, b, c, d');\n  };\n\n  exports['test .walk()'] = function (assert, util) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', new SourceNode(1, 0, 'a.js', ['someCall()']), ';\\n',\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';\\n',\n                               '}());']);\n    var expected = [\n      { str: '(function () {\\n', source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'someCall()',       source: 'a.js', line: 1,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '  ',               source: null,   line: null, column: null },\n      { str: 'if (foo) bar()',   source: 'b.js', line: 2,    column: 0    },\n      { str: ';\\n',              source: null,   line: null, column: null },\n      { str: '}());',            source: null,   line: null, column: null },\n    ];\n    var i = 0;\n    node.walk(function (chunk, loc) {\n      assert.equal(expected[i].str, chunk);\n      assert.equal(expected[i].source, loc.source);\n      assert.equal(expected[i].line, loc.line);\n      assert.equal(expected[i].column, loc.column);\n      i++;\n    });\n  };\n\n  exports['test .replaceRight'] = function (assert, util) {\n    var node;\n\n    // Not nested\n    node = new SourceNode(null, null, null, 'hello world');\n    node.replaceRight(/world/, 'universe');\n    assert.equal(node.toString(), 'hello universe');\n\n    // Nested\n    node = new SourceNode(null, null, null,\n                          [new SourceNode(null, null, null, 'hey sexy mama, '),\n                           new SourceNode(null, null, null, 'want to kill all humans?')]);\n    node.replaceRight(/kill all humans/, 'watch Futurama');\n    assert.equal(node.toString(), 'hey sexy mama, want to watch Futurama?');\n  };\n\n  exports['test .toStringWithSourceMap()'] = forEachNewline(function (assert, util, nl) {\n    var node = new SourceNode(null, null, null,\n                              ['(function () {' + nl,\n                               '  ',\n                                 new SourceNode(1, 0, 'a.js', 'someCall', 'originalCall'),\n                                 new SourceNode(1, 8, 'a.js', '()'),\n                                 ';' + nl,\n                               '  ', new SourceNode(2, 0, 'b.js', ['if (foo) bar()']), ';' + nl,\n                               '}());']);\n    var result = node.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(result.code, [\n      '(function () {',\n      '  someCall();',\n      '  if (foo) bar();',\n      '}());'\n    ].join(nl));\n\n    var map = result.map;\n    var mapWithoutOptions = node.toStringWithSourceMap().map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    assert.ok(mapWithoutOptions instanceof SourceMapGenerator, 'mapWithoutOptions instanceof SourceMapGenerator');\n    assert.ok(!('file' in mapWithoutOptions));\n    mapWithoutOptions._file = 'foo.js';\n    util.assertEqualMaps(assert, map.toJSON(), mapWithoutOptions.toJSON());\n\n    map = new SourceMapConsumer(map.toString());\n\n    var actual;\n\n    actual = map.originalPositionFor({\n      line: 1,\n      column: 4\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(actual.source, 'a.js');\n    assert.equal(actual.line, 1);\n    assert.equal(actual.column, 0);\n    assert.equal(actual.name, 'originalCall');\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 2\n    });\n    assert.equal(actual.source, 'b.js');\n    assert.equal(actual.line, 2);\n    assert.equal(actual.column, 0);\n\n    actual = map.originalPositionFor({\n      line: 3,\n      column: 16\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n\n    actual = map.originalPositionFor({\n      line: 4,\n      column: 2\n    });\n    assert.equal(actual.source, null);\n    assert.equal(actual.line, null);\n    assert.equal(actual.column, null);\n  });\n\n  exports['test .fromStringWithSourceMap()'] = forEachNewline(function (assert, util, nl) {\n    var testCode = util.testGeneratedCode.replace(/\\n/g, nl);\n    var node = SourceNode.fromStringWithSourceMap(\n                              testCode,\n                              new SourceMapConsumer(util.testMap));\n\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, testCode);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.testMap.version);\n    assert.equal(map.file, util.testMap.file);\n    assert.equal(map.mappings, util.testMap.mappings);\n  });\n\n  exports['test .fromStringWithSourceMap() empty map'] = forEachNewline(function (assert, util, nl) {\n    var node = SourceNode.fromStringWithSourceMap(\n                              util.testGeneratedCode.replace(/\\n/g, nl),\n                              new SourceMapConsumer(util.emptyMap));\n    var result = node.toStringWithSourceMap({\n      file: 'min.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, util.testGeneratedCode.replace(/\\n/g, nl));\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    assert.equal(map.version, util.emptyMap.version);\n    assert.equal(map.file, util.emptyMap.file);\n    assert.equal(map.mappings.length, util.emptyMap.mappings.length);\n    assert.equal(map.mappings, util.emptyMap.mappings);\n  });\n\n  exports['test .fromStringWithSourceMap() complex version'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      \"(function() {\" + nl,\n        \"  var Test = {};\" + nl,\n        \"  \", new SourceNode(1, 0, \"a.js\", \"Test.A = { value: 1234 };\" + nl),\n        \"  \", new SourceNode(2, 0, \"a.js\", \"Test.A.x = 'xyz';\"), nl,\n        \"}());\" + nl,\n        \"/* Generated Source */\"]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    var node = SourceNode.fromStringWithSourceMap(\n                              input.code,\n                              new SourceMapConsumer(input.map.toString()));\n\n    var result = node.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n    var map = result.map;\n    var code = result.code;\n\n    assert.equal(code, input.code);\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = map.toJSON();\n    var inputMap = input.map.toJSON();\n    util.assertEqualMaps(assert, map, inputMap);\n  });\n\n  exports['test .fromStringWithSourceMap() third argument'] = function (assert, util) {\n    // Assume the following directory structure:\n    //\n    // http://foo.org/\n    //   bar.coffee\n    //   app/\n    //     coffee/\n    //       foo.coffee\n    //       coffeeBundle.js # Made from {foo,bar,baz}.coffee\n    //       maps/\n    //         coffeeBundle.js.map\n    //     js/\n    //       foo.js\n    //     public/\n    //       app.js # Made from {foo,coffeeBundle}.js\n    //       app.js.map\n    //\n    // http://www.example.com/\n    //   baz.coffee\n\n    var coffeeBundle = new SourceNode(1, 0, 'foo.coffee', 'foo(coffee);\\n');\n    coffeeBundle.setSourceContent('foo.coffee', 'foo coffee');\n    coffeeBundle.add(new SourceNode(2, 0, '/bar.coffee', 'bar(coffee);\\n'));\n    coffeeBundle.add(new SourceNode(3, 0, 'http://www.example.com/baz.coffee', 'baz(coffee);'));\n    coffeeBundle = coffeeBundle.toStringWithSourceMap({\n      file: 'foo.js',\n      sourceRoot: '..'\n    });\n\n    var foo = new SourceNode(1, 0, 'foo.js', 'foo(js);');\n\n    var test = function(relativePath, expectedSources) {\n      var app = new SourceNode();\n      app.add(SourceNode.fromStringWithSourceMap(\n                                coffeeBundle.code,\n                                new SourceMapConsumer(coffeeBundle.map.toString()),\n                                relativePath));\n      app.add(foo);\n      var i = 0;\n      app.walk(function (chunk, loc) {\n        assert.equal(loc.source, expectedSources[i]);\n        i++;\n      });\n      app.walkSourceContents(function (sourceFile, sourceContent) {\n        assert.equal(sourceFile, expectedSources[0]);\n        assert.equal(sourceContent, 'foo coffee');\n      })\n    };\n\n    test('../coffee/maps', [\n      '../coffee/foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee',\n      'foo.js'\n    ]);\n\n    // If the third parameter is omitted or set to the current working\n    // directory we get incorrect source paths:\n\n    test(undefined, [\n      '../foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee',\n      'foo.js'\n    ]);\n\n    test('', [\n      '../foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee',\n      'foo.js'\n    ]);\n\n    test('.', [\n      '../foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee',\n      'foo.js'\n    ]);\n\n    test('./', [\n      '../foo.coffee',\n      '/bar.coffee',\n      'http://www.example.com/baz.coffee',\n      'foo.js'\n    ]);\n  };\n\n  exports['test .toStringWithSourceMap() merging duplicate mappings'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      new SourceNode(1, 0, \"a.js\", \"(function\"),\n      new SourceNode(1, 0, \"a.js\", \"() {\" + nl),\n      \"  \",\n      new SourceNode(1, 0, \"a.js\", \"var Test = \"),\n      new SourceNode(1, 0, \"b.js\", \"{};\" + nl),\n      new SourceNode(2, 0, \"b.js\", \"Test\"),\n      new SourceNode(2, 0, \"b.js\", \".A\", \"A\"),\n      new SourceNode(2, 20, \"b.js\", \" = { value: \", \"A\"),\n      \"1234\",\n      new SourceNode(2, 40, \"b.js\", \" };\" + nl, \"A\"),\n      \"}());\" + nl,\n      \"/* Generated Source */\"\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(input.code, [\n      \"(function() {\",\n      \"  var Test = {};\",\n      \"Test.A = { value: 1234 };\",\n      \"}());\",\n      \"/* Generated Source */\"\n    ].join(nl))\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 1, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    // Here is no need for a empty mapping,\n    // because mappings ends at eol\n    correctMap.addMapping({\n      generated: { line: 2, column: 2 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 13 },\n      source: 'b.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 4 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 6 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 20 }\n    });\n    // This empty mapping is required,\n    // because there is a hole in the middle of the line\n    correctMap.addMapping({\n      generated: { line: 3, column: 18 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 22 },\n      source: 'b.js',\n      name: 'A',\n      original: { line: 2, column: 40 }\n    });\n    // Here is no need for a empty mapping,\n    // because mappings ends at eol\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, inputMap, correctMap);\n  });\n\n  exports['test .toStringWithSourceMap() multi-line SourceNodes'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      new SourceNode(1, 0, \"a.js\", \"(function() {\" + nl + \"var nextLine = 1;\" + nl + \"anotherLine();\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"Test.call(this, 123);\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"this['stuff'] = 'v';\" + nl),\n      new SourceNode(2, 2, \"b.js\", \"anotherLine();\" + nl),\n      \"/*\" + nl + \"Generated\" + nl + \"Source\" + nl + \"*/\" + nl,\n      new SourceNode(3, 4, \"c.js\", \"anotherLine();\" + nl),\n      \"/*\" + nl + \"Generated\" + nl + \"Source\" + nl + \"*/\"\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(input.code, [\n      \"(function() {\",\n      \"var nextLine = 1;\",\n      \"anotherLine();\",\n      \"Test.call(this, 123);\",\n      \"this['stuff'] = 'v';\",\n      \"anotherLine();\",\n      \"/*\",\n      \"Generated\",\n      \"Source\",\n      \"*/\",\n      \"anotherLine();\",\n      \"/*\",\n      \"Generated\",\n      \"Source\",\n      \"*/\"\n    ].join(nl));\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 1, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 2, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 4, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 5, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 6, column: 0 },\n      source: 'b.js',\n      original: { line: 2, column: 2 }\n    });\n    correctMap.addMapping({\n      generated: { line: 11, column: 0 },\n      source: 'c.js',\n      original: { line: 3, column: 4 }\n    });\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, inputMap, correctMap);\n  });\n\n  exports['test .toStringWithSourceMap() with empty string'] = function (assert, util) {\n    var node = new SourceNode(1, 0, 'empty.js', '');\n    var result = node.toStringWithSourceMap();\n    assert.equal(result.code, '');\n  };\n\n  exports['test .toStringWithSourceMap() with consecutive newlines'] = forEachNewline(function (assert, util, nl) {\n    var input = new SourceNode(null, null, null, [\n      \"/***/\" + nl + nl,\n      new SourceNode(1, 0, \"a.js\", \"'use strict';\" + nl),\n      new SourceNode(2, 0, \"a.js\", \"a();\"),\n    ]);\n    input = input.toStringWithSourceMap({\n      file: 'foo.js'\n    });\n\n    assert.equal(input.code, [\n      \"/***/\",\n      \"\",\n      \"'use strict';\",\n      \"a();\",\n    ].join(nl));\n\n    var correctMap = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    correctMap.addMapping({\n      generated: { line: 3, column: 0 },\n      source: 'a.js',\n      original: { line: 1, column: 0 }\n    });\n    correctMap.addMapping({\n      generated: { line: 4, column: 0 },\n      source: 'a.js',\n      original: { line: 2, column: 0 }\n    });\n\n    var inputMap = input.map.toJSON();\n    correctMap = correctMap.toJSON();\n    util.assertEqualMaps(assert, inputMap, correctMap);\n  });\n\n  exports['test setSourceContent with toStringWithSourceMap'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var map = node.toStringWithSourceMap({\n      file: 'foo.js'\n    }).map;\n\n    assert.ok(map instanceof SourceMapGenerator, 'map instanceof SourceMapGenerator');\n    map = new SourceMapConsumer(map.toString());\n\n    assert.equal(map.sources.length, 2);\n    assert.equal(map.sources[0], 'a.js');\n    assert.equal(map.sources[1], 'b.js');\n    assert.equal(map.sourcesContent.length, 2);\n    assert.equal(map.sourcesContent[0], 'someContent');\n    assert.equal(map.sourcesContent[1], 'otherContent');\n  };\n\n  exports['test walkSourceContents'] = function (assert, util) {\n    var aNode = new SourceNode(1, 1, 'a.js', 'a');\n    aNode.setSourceContent('a.js', 'someContent');\n    var node = new SourceNode(null, null, null,\n                              ['(function () {\\n',\n                               '  ', aNode,\n                               '  ', new SourceNode(1, 1, 'b.js', 'b'),\n                               '}());']);\n    node.setSourceContent('b.js', 'otherContent');\n    var results = [];\n    node.walkSourceContents(function (sourceFile, sourceContent) {\n      results.push([sourceFile, sourceContent]);\n    });\n    assert.equal(results.length, 2);\n    assert.equal(results[0][0], 'a.js');\n    assert.equal(results[0][1], 'someContent');\n    assert.equal(results[1][0], 'b.js');\n    assert.equal(results[1][1], 'otherContent');\n  };\n});\n"]}