{"version":3,"sources":["test-array-set.js"],"names":[],"mappings":"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","file":"test-array-set-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var ArraySet = require('../../lib/source-map/array-set').ArraySet;\n\n  function makeTestSet() {\n    var set = new ArraySet();\n    for (var i = 0; i < 100; i++) {\n      set.add(String(i));\n    }\n    return set;\n  }\n\n  exports['test .has() membership'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.ok(set.has(String(i)));\n    }\n  };\n\n  exports['test .indexOf() elements'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.strictEqual(set.indexOf(String(i)), i);\n    }\n  };\n\n  exports['test .at() indexing'] = function (assert, util) {\n    var set = makeTestSet();\n    for (var i = 0; i < 100; i++) {\n      assert.strictEqual(set.at(i), String(i));\n    }\n  };\n\n  exports['test creating from an array'] = function (assert, util) {\n    var set = ArraySet.fromArray(['foo', 'bar', 'baz', 'quux', 'hasOwnProperty']);\n\n    assert.ok(set.has('foo'));\n    assert.ok(set.has('bar'));\n    assert.ok(set.has('baz'));\n    assert.ok(set.has('quux'));\n    assert.ok(set.has('hasOwnProperty'));\n\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.indexOf('bar'), 1);\n    assert.strictEqual(set.indexOf('baz'), 2);\n    assert.strictEqual(set.indexOf('quux'), 3);\n\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'bar');\n    assert.strictEqual(set.at(2), 'baz');\n    assert.strictEqual(set.at(3), 'quux');\n  };\n\n  exports['test that you can add __proto__; see github issue #30'] = function (assert, util) {\n    var set = new ArraySet();\n    set.add('__proto__');\n    assert.ok(set.has('__proto__'));\n    assert.strictEqual(set.at(0), '__proto__');\n    assert.strictEqual(set.indexOf('__proto__'), 0);\n  };\n\n  exports['test .fromArray() with duplicates'] = function (assert, util) {\n    var set = ArraySet.fromArray(['foo', 'foo']);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 1);\n\n    set = ArraySet.fromArray(['foo', 'foo'], true);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 2);\n  };\n\n  exports['test .add() with duplicates'] = function (assert, util) {\n    var set = new ArraySet();\n    set.add('foo');\n\n    set.add('foo');\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 1);\n\n    set.add('foo', true);\n    assert.ok(set.has('foo'));\n    assert.strictEqual(set.at(0), 'foo');\n    assert.strictEqual(set.at(1), 'foo');\n    assert.strictEqual(set.indexOf('foo'), 0);\n    assert.strictEqual(set.toArray().length, 2);\n  };\n\n});\n"]}