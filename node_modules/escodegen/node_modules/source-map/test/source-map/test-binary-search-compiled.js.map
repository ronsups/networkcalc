{"version":3,"sources":["test-binary-search.js"],"names":[],"mappings":";;;;;;;;AAMA,IAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,MAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,EAA4B,OAA5B,CAAb;AACH;AACD,OAAO,UAAU,OAAV,EAAmB,OAAnB,EAA4B,MAA5B,EAAoC;;AAEzC,MAAI,eAAe,QAAQ,oCAAR,CAAnB;;AAEA,WAAS,aAAT,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B;AAC3B,WAAO,IAAI,CAAX;AACD;;AAED,UAAQ,eAAR,IAA2B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACjD,QAAI,SAAS,EAAb;AACA,QAAI,WAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,EAAZ,EAAe,EAAf,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAAf;;AAEA,WAAO,YAAP,CAAoB,YAAY;AAC9B,mBAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC;AACD,KAFD;;AAIA,WAAO,KAAP,CAAa,SAAS,aAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC,CAAT,CAAb,EAA6E,EAA7E;AACD,GATD;;AAWA,UAAQ,cAAR,IAA0B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AAChD,QAAI,SAAS,CAAb;AACA,QAAI,WAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,EAAZ,EAAe,EAAf,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAAf;;AAEA,WAAO,YAAP,CAAoB,YAAY;AAC9B,mBAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC;AACD,KAFD;;AAIA,WAAO,KAAP,CAAa,aAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC,CAAb,EAAmE,CAAC,CAApE;AACD,GATD;;AAWA,UAAQ,mBAAR,IAA+B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACrD,QAAI,SAAS,CAAb;AACA,QAAI,WAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,EAAZ,EAAe,EAAf,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAAf;;AAEA,WAAO,KAAP,CAAa,SAAS,aAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC,CAAT,CAAb,EAA6E,CAA7E;AACD,GALD;;AAOA,UAAQ,mBAAR,IAA+B,UAAU,MAAV,EAAkB,IAAlB,EAAwB;AACrD,QAAI,SAAS,EAAb;AACA,QAAI,WAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,EAAZ,EAAe,EAAf,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAAf;;AAEA,WAAO,KAAP,CAAa,SAAS,aAAa,MAAb,CAAoB,MAApB,EAA4B,QAA5B,EAAsC,aAAtC,CAAT,CAAb,EAA6E,EAA7E;AACD,GALD;AAOD,CA5CD","file":"test-binary-search-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var binarySearch = require('../../lib/source-map/binary-search');\n\n  function numberCompare(a, b) {\n    return a - b;\n  }\n\n  exports['test too high'] = function (assert, util) {\n    var needle = 30;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.doesNotThrow(function () {\n      binarySearch.search(needle, haystack, numberCompare);\n    });\n\n    assert.equal(haystack[binarySearch.search(needle, haystack, numberCompare)], 20);\n  };\n\n  exports['test too low'] = function (assert, util) {\n    var needle = 1;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.doesNotThrow(function () {\n      binarySearch.search(needle, haystack, numberCompare);\n    });\n\n    assert.equal(binarySearch.search(needle, haystack, numberCompare), -1);\n  };\n\n  exports['test exact search'] = function (assert, util) {\n    var needle = 4;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.equal(haystack[binarySearch.search(needle, haystack, numberCompare)], 4);\n  };\n\n  exports['test fuzzy search'] = function (assert, util) {\n    var needle = 19;\n    var haystack = [2,4,6,8,10,12,14,16,18,20];\n\n    assert.equal(haystack[binarySearch.search(needle, haystack, numberCompare)], 18);\n  };\n\n});\n"]}