{"version":3,"sources":["test-source-map-consumer.js"],"names":[],"mappings":"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","file":"test-source-map-consumer-compiled.js","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var SourceMapConsumer = require('../../lib/source-map/source-map-consumer').SourceMapConsumer;\n  var SourceMapGenerator = require('../../lib/source-map/source-map-generator').SourceMapGenerator;\n\n  exports['test that we can instantiate with a string or an object'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(util.testMap);\n    });\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test that the `sources` field has the original sources'] = function (assert, util) {\n    var map;\n    var sources;\n\n    map = new SourceMapConsumer(util.testMap);\n    sources = map.sources;\n    assert.equal(sources[0], '/the/root/one.js');\n    assert.equal(sources[1], '/the/root/two.js');\n    assert.equal(sources.length, 2);\n\n    map = new SourceMapConsumer(util.testMapNoSourceRoot);\n    sources = map.sources;\n    assert.equal(sources[0], 'one.js');\n    assert.equal(sources[1], 'two.js');\n    assert.equal(sources.length, 2);\n\n    map = new SourceMapConsumer(util.testMapEmptySourceRoot);\n    sources = map.sources;\n    assert.equal(sources[0], 'one.js');\n    assert.equal(sources[1], 'two.js');\n    assert.equal(sources.length, 2);\n  };\n\n  exports['test that the source root is reflected in a mapping\\'s source field'] = function (assert, util) {\n    var map;\n    var mapping;\n\n    map = new SourceMapConsumer(util.testMap);\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, '/the/root/one.js');\n\n\n    map = new SourceMapConsumer(util.testMapNoSourceRoot);\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, 'two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, 'one.js');\n\n\n    map = new SourceMapConsumer(util.testMapEmptySourceRoot);\n\n    mapping = map.originalPositionFor({\n      line: 2,\n      column: 1\n    });\n    assert.equal(mapping.source, 'two.js');\n\n    mapping = map.originalPositionFor({\n      line: 1,\n      column: 1\n    });\n    assert.equal(mapping.source, 'one.js');\n  };\n\n  exports['test mapping tokens back exactly'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    util.assertMapping(1, 1, '/the/root/one.js', 1, 1, null, map, assert);\n    util.assertMapping(1, 5, '/the/root/one.js', 1, 5, null, map, assert);\n    util.assertMapping(1, 9, '/the/root/one.js', 1, 11, null, map, assert);\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 21, 'bar', map, assert);\n    util.assertMapping(1, 21, '/the/root/one.js', 2, 3, null, map, assert);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 10, 'baz', map, assert);\n    util.assertMapping(1, 32, '/the/root/one.js', 2, 14, 'bar', map, assert);\n\n    util.assertMapping(2, 1, '/the/root/two.js', 1, 1, null, map, assert);\n    util.assertMapping(2, 5, '/the/root/two.js', 1, 5, null, map, assert);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 11, null, map, assert);\n    util.assertMapping(2, 18, '/the/root/two.js', 1, 21, 'n', map, assert);\n    util.assertMapping(2, 21, '/the/root/two.js', 2, 3, null, map, assert);\n    util.assertMapping(2, 28, '/the/root/two.js', 2, 10, 'n', map, assert);\n  };\n\n  exports['test mapping tokens fuzzy'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n\n    // Finding original positions\n    util.assertMapping(1, 20, '/the/root/one.js', 1, 21, 'bar', map, assert, true);\n    util.assertMapping(1, 30, '/the/root/one.js', 2, 10, 'baz', map, assert, true);\n    util.assertMapping(2, 12, '/the/root/two.js', 1, 11, null, map, assert, true);\n\n    // Finding generated positions\n    util.assertMapping(1, 18, '/the/root/one.js', 1, 22, 'bar', map, assert, null, true);\n    util.assertMapping(1, 28, '/the/root/one.js', 2, 13, 'baz', map, assert, null, true);\n    util.assertMapping(2, 9, '/the/root/two.js', 1, 16, null, map, assert, null, true);\n  };\n\n  exports['test mappings and end of lines'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 1, column: 1 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n\n    var map = SourceMapConsumer.fromSourceMap(smg);\n\n    // When finding original positions, mappings end at the end of the line.\n    util.assertMapping(2, 1, null, null, null, null, map, assert, true)\n\n    // When finding generated positions, mappings do not end at the end of the line.\n    util.assertMapping(1, 1, 'bar.js', 2, 1, null, map, assert, null, true);\n  };\n\n  exports['test creating source map consumers with )]}\\' prefix'] = function (assert, util) {\n    assert.doesNotThrow(function () {\n      var map = new SourceMapConsumer(\")]}'\" + JSON.stringify(util.testMap));\n    });\n  };\n\n  exports['test eachMapping'] = function (assert, util) {\n    var map;\n\n    map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.generatedLine >= previousLine);\n\n      assert.ok(mapping.source === '/the/root/one.js' || mapping.source === '/the/root/two.js');\n\n      if (mapping.generatedLine === previousLine) {\n        assert.ok(mapping.generatedColumn >= previousColumn);\n        previousColumn = mapping.generatedColumn;\n      }\n      else {\n        previousLine = mapping.generatedLine;\n        previousColumn = -Infinity;\n      }\n    });\n\n    map = new SourceMapConsumer(util.testMapNoSourceRoot);\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source === 'one.js' || mapping.source === 'two.js');\n    });\n\n    map = new SourceMapConsumer(util.testMapEmptySourceRoot);\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source === 'one.js' || mapping.source === 'two.js');\n    });\n  };\n\n  exports['test iterating over mappings in a different order'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var previousLine = -Infinity;\n    var previousColumn = -Infinity;\n    var previousSource = \"\";\n    map.eachMapping(function (mapping) {\n      assert.ok(mapping.source >= previousSource);\n\n      if (mapping.source === previousSource) {\n        assert.ok(mapping.originalLine >= previousLine);\n\n        if (mapping.originalLine === previousLine) {\n          assert.ok(mapping.originalColumn >= previousColumn);\n          previousColumn = mapping.originalColumn;\n        }\n        else {\n          previousLine = mapping.originalLine;\n          previousColumn = -Infinity;\n        }\n      }\n      else {\n        previousSource = mapping.source;\n        previousLine = -Infinity;\n        previousColumn = -Infinity;\n      }\n    }, null, SourceMapConsumer.ORIGINAL_ORDER);\n  };\n\n  exports['test that we can set the context for `this` in eachMapping'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMap);\n    var context = {};\n    map.eachMapping(function () {\n      assert.equal(this, context);\n    }, context);\n  };\n\n  exports['test that the `sourcesContent` field has the original sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sourcesContent = map.sourcesContent;\n\n    assert.equal(sourcesContent[0], ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(sourcesContent[1], ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(sourcesContent.length, 2);\n  };\n\n  exports['test that we can get the original sources for the sources'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapWithSourcesContent);\n    var sources = map.sources;\n\n    assert.equal(map.sourceContentFor(sources[0]), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(sources[1]), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(map.sourceContentFor(\"one.js\"), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(\"two.js\"), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.throws(function () {\n      map.sourceContentFor(\"\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"/the/root/three.js\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"three.js\");\n    }, Error);\n  };\n\n  exports['test that we can get the original source content with relative source paths'] = function (assert, util) {\n    var map = new SourceMapConsumer(util.testMapRelativeSources);\n    var sources = map.sources;\n\n    assert.equal(map.sourceContentFor(sources[0]), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(sources[1]), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.equal(map.sourceContentFor(\"one.js\"), ' ONE.foo = function (bar) {\\n   return baz(bar);\\n };');\n    assert.equal(map.sourceContentFor(\"two.js\"), ' TWO.inc = function (n) {\\n   return n + 1;\\n };');\n    assert.throws(function () {\n      map.sourceContentFor(\"\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"/the/root/three.js\");\n    }, Error);\n    assert.throws(function () {\n      map.sourceContentFor(\"three.js\");\n    }, Error);\n  };\n\n  exports['test sourceRoot + generatedPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map.addMapping({\n      original: { line: 5, column: 5 },\n      generated: { line: 6, column: 6 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    // Should handle without sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    // Should handle with sourceRoot.\n    var pos = map.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'foo/bar/bang.coffee'\n    });\n\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n  };\n\n  exports['test allGeneratedPositionsFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.coffee'\n    });\n    map.addMapping({\n      original: { line: 2, column: 1 },\n      generated: { line: 3, column: 2 },\n      source: 'bar.coffee'\n    });\n    map.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 3, column: 3 },\n      source: 'bar.coffee'\n    });\n    map.addMapping({\n      original: { line: 3, column: 1 },\n      generated: { line: 4, column: 2 },\n      source: 'bar.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 2,\n      source: 'bar.coffee'\n    });\n\n    assert.equal(mappings.length, 2);\n    assert.equal(mappings[0].line, 3);\n    assert.equal(mappings[0].column, 2);\n    assert.equal(mappings[1].line, 3);\n    assert.equal(mappings[1].column, 3);\n  };\n\n  exports['test allGeneratedPositionsFor for line with no mappings'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.coffee'\n    });\n    map.addMapping({\n      original: { line: 3, column: 1 },\n      generated: { line: 4, column: 2 },\n      source: 'bar.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 2,\n      source: 'bar.coffee'\n    });\n\n    assert.equal(mappings.length, 0);\n  };\n\n  exports['test allGeneratedPositionsFor source map with no mappings'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 2,\n      source: 'bar.coffee'\n    });\n\n    assert.equal(mappings.length, 0);\n  };\n\n  exports['test computeColumnSpans'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      file: 'generated.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 1, column: 1 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 2, column: 1 },\n      generated: { line: 2, column: 1 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 2, column: 10 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 2, column: 3 },\n      generated: { line: 2, column: 20 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 3, column: 1 },\n      generated: { line: 3, column: 1 },\n      source: 'foo.coffee'\n    });\n    map.addMapping({\n      original: { line: 3, column: 2 },\n      generated: { line: 3, column: 2 },\n      source: 'foo.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    map.computeColumnSpans();\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 1,\n      source: 'foo.coffee'\n    });\n\n    assert.equal(mappings.length, 1);\n    assert.equal(mappings[0].lastColumn, Infinity);\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 2,\n      source: 'foo.coffee'\n    });\n\n    assert.equal(mappings.length, 3);\n    assert.equal(mappings[0].lastColumn, 9);\n    assert.equal(mappings[1].lastColumn, 19);\n    assert.equal(mappings[2].lastColumn, Infinity);\n\n    var mappings = map.allGeneratedPositionsFor({\n      line: 3,\n      source: 'foo.coffee'\n    });\n\n    assert.equal(mappings.length, 2);\n    assert.equal(mappings[0].lastColumn, 1);\n    assert.equal(mappings[1].lastColumn, Infinity);\n  };\n\n  exports['test sourceRoot + originalPositionFor'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'foo/bar',\n      file: 'baz.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bang.coffee'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2,\n    });\n\n    // Should always have the prepended source root\n    assert.equal(pos.source, 'foo/bar/bang.coffee');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n  };\n\n  exports['test github issue #56'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://',\n      file: 'www.example.com/foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'www.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1);\n    assert.equal(sources[0], 'http://www.example.com/original.js');\n  };\n\n  exports['test github issue #43'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'http://cdn.example.com/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://cdn.example.com/original.js',\n                 'Should not be joined with the sourceRoot.');\n  };\n\n  exports['test absolute path, but same host sources'] = function (assert, util) {\n    var map = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/foo/bar',\n      file: 'foo.js'\n    });\n    map.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: '/original.js'\n    });\n    map = new SourceMapConsumer(map.toString());\n\n    var sources = map.sources;\n    assert.equal(sources.length, 1,\n                 'Should only be one source.');\n    assert.equal(sources[0], 'http://example.com/original.js',\n                 'Source should be relative the host of the source root.');\n  };\n\n  exports['test github issue #64'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"http://example.com/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    assert.equal(map.sourceContentFor(\"a\"), \"foo\");\n    assert.equal(map.sourceContentFor(\"/a\"), \"foo\");\n  };\n\n  exports['test bug 885597'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sourceRoot\": \"file:///Users/AlGore/Invented/The/Internet/\",\n      \"sources\": [\"/a\"],\n      \"names\": [],\n      \"mappings\": \"AACA\",\n      \"sourcesContent\": [\"foo\"]\n    });\n\n    var s = map.sources[0];\n    assert.equal(map.sourceContentFor(s), \"foo\");\n  };\n\n  exports['test github issue #72, duplicate sources'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source1.js\", \"source1.js\", \"source3.js\"],\n      \"names\": [],\n      \"mappings\": \";EAAC;;IAEE;;MEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.source, 'http://example.com/source1.js');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.source, 'http://example.com/source3.js');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test github issue #72, duplicate names'] = function (assert, util) {\n    var map = new SourceMapConsumer({\n      \"version\": 3,\n      \"file\": \"foo.js\",\n      \"sources\": [\"source.js\"],\n      \"names\": [\"name1\", \"name1\", \"name3\"],\n      \"mappings\": \";EAACA;;IAEEA;;MAEEE\",\n      \"sourceRoot\": \"http://example.com\"\n    });\n\n    var pos = map.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n\n    var pos = map.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.name, 'name1');\n    assert.equal(pos.line, 3);\n    assert.equal(pos.column, 3);\n\n    var pos = map.originalPositionFor({\n      line: 6,\n      column: 6\n    });\n    assert.equal(pos.name, 'name3');\n    assert.equal(pos.line, 5);\n    assert.equal(pos.column, 5);\n  };\n\n  exports['test SourceMapConsumer.fromSourceMap'] = function (assert, util) {\n    var smg = new SourceMapGenerator({\n      sourceRoot: 'http://example.com/',\n      file: 'foo.js'\n    });\n    smg.addMapping({\n      original: { line: 1, column: 1 },\n      generated: { line: 2, column: 2 },\n      source: 'bar.js'\n    });\n    smg.addMapping({\n      original: { line: 2, column: 2 },\n      generated: { line: 4, column: 4 },\n      source: 'baz.js',\n      name: 'dirtMcGirt'\n    });\n    smg.setSourceContent('baz.js', 'baz.js content');\n\n    var smc = SourceMapConsumer.fromSourceMap(smg);\n    assert.equal(smc.file, 'foo.js');\n    assert.equal(smc.sourceRoot, 'http://example.com/');\n    assert.equal(smc.sources.length, 2);\n    assert.equal(smc.sources[0], 'http://example.com/bar.js');\n    assert.equal(smc.sources[1], 'http://example.com/baz.js');\n    assert.equal(smc.sourceContentFor('baz.js'), 'baz.js content');\n\n    var pos = smc.originalPositionFor({\n      line: 2,\n      column: 2\n    });\n    assert.equal(pos.line, 1);\n    assert.equal(pos.column, 1);\n    assert.equal(pos.source, 'http://example.com/bar.js');\n    assert.equal(pos.name, null);\n\n    pos = smc.generatedPositionFor({\n      line: 1,\n      column: 1,\n      source: 'http://example.com/bar.js'\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n\n    pos = smc.originalPositionFor({\n      line: 4,\n      column: 4\n    });\n    assert.equal(pos.line, 2);\n    assert.equal(pos.column, 2);\n    assert.equal(pos.source, 'http://example.com/baz.js');\n    assert.equal(pos.name, 'dirtMcGirt');\n\n    pos = smc.generatedPositionFor({\n      line: 2,\n      column: 2,\n      source: 'http://example.com/baz.js'\n    });\n    assert.equal(pos.line, 4);\n    assert.equal(pos.column, 4);\n  };\n});\n"]}