{"version":3,"sources":["acorn"],"names":[],"mappings":";;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,QAAQ,QAAQ,kBAAR,CAAZ;;AAEA,IAAI,MAAJ;AAAA,IAAY,MAAZ;AAAA,IAAoB,MAApB;AAAA,IAA4B,UAAU,EAAtC;AAAA,IAA0C,SAAS,KAAnD;AAAA,IAA0D,UAAU,KAApE;AAAA,IAA2E,WAAW,KAAtF;;AAEA,SAAS,IAAT,CAAc,MAAd,EAAsB;AACpB,MAAI,QAAS,UAAU,CAAX,GAAgB,QAAQ,GAAxB,GAA8B,QAAQ,KAAlD;AACA,QAAM,YAAY,KAAK,QAAL,CAAc,QAAQ,IAAR,CAAa,CAAb,CAAd,CAAZ,GAA6C,4BAAnD;AACA,QAAM,qGAAN;AACA,UAAQ,IAAR,CAAa,MAAb;AACD;;AAED,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,IAAR,CAAa,MAAjC,EAAyC,EAAE,CAA3C,EAA8C;AAC5C,MAAI,MAAM,QAAQ,IAAR,CAAa,CAAb,CAAV;AACA,MAAI,IAAI,CAAJ,KAAU,GAAV,IAAiB,CAAC,MAAtB,EAA8B,SAAS,GAAT,CAA9B,KACK,IAAI,OAAO,IAAP,IAAe,CAAC,MAAhB,IAA0B,IAAI,CAAJ,IAAS,QAAQ,IAAR,CAAa,MAApD,EAA4D,SAAS,QAAQ,IAAR,CAAa,EAAE,CAAf,CAAT,CAA5D,KACA,IAAI,OAAO,SAAX,EAAsB,QAAQ,WAAR,GAAsB,CAAtB,CAAtB,KACA,IAAI,OAAO,SAAX,EAAsB,QAAQ,WAAR,GAAsB,CAAtB,CAAtB,KACA,IAAI,OAAO,SAAX,EAAsB,QAAQ,WAAR,GAAsB,CAAtB,CAAtB,KACA,IAAI,OAAO,SAAX,EAAsB,QAAQ,WAAR,GAAsB,CAAtB,CAAtB,KACA,IAAI,OAAO,aAAX,EAA0B,QAAQ,SAAR,GAAoB,IAApB,CAA1B,KACA,IAAI,OAAO,mBAAX,EAAgC,QAAQ,aAAR,GAAwB,IAAxB,CAAhC,KACA,IAAI,OAAO,UAAX,EAAuB,SAAS,IAAT,CAAvB,KACA,IAAI,OAAO,WAAX,EAAwB,UAAU,IAAV,CAAxB,KACA,IAAI,OAAO,QAAX,EAAqB,KAAK,CAAL,EAArB,KACA,IAAI,OAAO,YAAX,EAAyB,WAAW,IAAX,CAAzB,KACA,KAAK,CAAL;AACN;;AAED,IAAI;AACF,MAAI,OAAO,GAAG,YAAH,CAAgB,MAAhB,EAAwB,MAAxB,CAAX;;AAEA,MAAI,CAAC,QAAL,EACE,SAAS,MAAM,KAAN,CAAY,IAAZ,EAAkB,OAAlB,CAAT,CADF,KAEK;AACH,QAAI,MAAM,MAAM,QAAN,CAAe,IAAf,EAAqB,OAArB,CAAV;AACA,aAAS,EAAT;AACA,WAAO,IAAP,EAAa;AACX,UAAI,QAAQ,KAAZ;AACA,aAAO,IAAP,CAAY,KAAZ;AACA,UAAI,MAAM,IAAN,CAAW,IAAX,IAAmB,KAAvB,EACE;AACH;AACF;AACF,CAfD,CAeE,OAAM,CAAN,EAAS;AACT,UAAQ,GAAR,CAAY,EAAE,OAAd;AACA,UAAQ,IAAR,CAAa,CAAb;AACD;;AAED,IAAI,CAAC,MAAL,EACE,QAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,WAAW,MAAX,GAAoB,MAAnC,EAA2C,IAA3C,EAAiD,UAAU,IAAV,GAAiB,CAAlE,CAAZ","file":"acorn-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar acorn = require(\"../dist/acorn.js\");\n\nvar infile, parsed, tokens, options = {}, silent = false, compact = false, tokenize = false;\n\nfunction help(status) {\n  var print = (status == 0) ? console.log : console.error;\n  print(\"usage: \" + path.basename(process.argv[1]) + \" [--ecma3|--ecma5|--ecma6]\");\n  print(\"        [--tokenize] [--locations] [---allow-hash-bang] [--compact] [--silent] [--help] [--] infile\");\n  process.exit(status);\n}\n\nfor (var i = 2; i < process.argv.length; ++i) {\n  var arg = process.argv[i];\n  if (arg[0] != \"-\" && !infile) infile = arg;\n  else if (arg == \"--\" && !infile && i + 2 == process.argv.length) infile = process.argv[++i];\n  else if (arg == \"--ecma3\") options.ecmaVersion = 3;\n  else if (arg == \"--ecma5\") options.ecmaVersion = 5;\n  else if (arg == \"--ecma6\") options.ecmaVersion = 6;\n  else if (arg == \"--ecma7\") options.ecmaVersion = 7;\n  else if (arg == \"--locations\") options.locations = true;\n  else if (arg == \"--allow-hash-bang\") options.allowHashBang = true;\n  else if (arg == \"--silent\") silent = true;\n  else if (arg == \"--compact\") compact = true;\n  else if (arg == \"--help\") help(0);\n  else if (arg == \"--tokenize\") tokenize = true;\n  else help(1);\n}\n\ntry {\n  var code = fs.readFileSync(infile, \"utf8\");\n\n  if (!tokenize)\n    parsed = acorn.parse(code, options);\n  else {\n    var get = acorn.tokenize(code, options);\n    tokens = [];\n    while (true) {\n      var token = get();\n      tokens.push(token);\n      if (token.type.type == \"eof\")\n        break;\n    }\n  }\n} catch(e) {\n  console.log(e.message);\n  process.exit(1);\n}\n\nif (!silent)\n  console.log(JSON.stringify(tokenize ? tokens : parsed, null, compact ? null : 2));\n"]}