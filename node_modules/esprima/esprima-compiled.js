'use strict';/*
  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>
  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>
  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*//*jslint bitwise:true plusplus:true *//*global esprima:true, define:true, exports:true, window: true,
createLocationMarker: true,
throwError: true, generateStatement: true, peek: true,
parseAssignmentExpression: true, parseBlock: true, parseExpression: true,
parseFunctionDeclaration: true, parseFunctionExpression: true,
parseFunctionSourceElements: true, parseVariableIdentifier: true,
parseLeftHandSideExpression: true,
parseUnaryExpression: true,
parseStatement: true, parseSourceElement: true */(function(root,factory){'use strict';// Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,
// Rhino, and plain browser loading.
if(typeof define==='function'&&define.amd){define(['exports'],factory);}else if(typeof exports!=='undefined'){factory(exports);}else{factory(root.esprima={});}})(undefined,function(exports){'use strict';var Token,TokenName,FnExprTokens,Syntax,PropertyKind,Messages,Regex,SyntaxTreeDelegate,source,strict,index,lineNumber,lineStart,length,delegate,lookahead,state,extra;Token={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9};TokenName={};TokenName[Token.BooleanLiteral]='Boolean';TokenName[Token.EOF]='<end>';TokenName[Token.Identifier]='Identifier';TokenName[Token.Keyword]='Keyword';TokenName[Token.NullLiteral]='Null';TokenName[Token.NumericLiteral]='Numeric';TokenName[Token.Punctuator]='Punctuator';TokenName[Token.StringLiteral]='String';TokenName[Token.RegularExpression]='RegularExpression';// A function following one of those tokens is an expression.
FnExprTokens=['(','{','[','in','typeof','instanceof','new','return','case','delete','throw','void',// assignment operators
'=','+=','-=','*=','/=','%=','<<=','>>=','>>>=','&=','|=','^=',',',// binary/unary operators
'+','-','*','/','%','++','--','<<','>>','>>>','&','|','^','!','~','&&','||','?',':','===','==','>=','<=','<','>','!=','!=='];Syntax={AssignmentExpression:'AssignmentExpression',ArrayExpression:'ArrayExpression',BlockStatement:'BlockStatement',BinaryExpression:'BinaryExpression',BreakStatement:'BreakStatement',CallExpression:'CallExpression',CatchClause:'CatchClause',ConditionalExpression:'ConditionalExpression',ContinueStatement:'ContinueStatement',DoWhileStatement:'DoWhileStatement',DebuggerStatement:'DebuggerStatement',EmptyStatement:'EmptyStatement',ExpressionStatement:'ExpressionStatement',ForStatement:'ForStatement',ForInStatement:'ForInStatement',FunctionDeclaration:'FunctionDeclaration',FunctionExpression:'FunctionExpression',Identifier:'Identifier',IfStatement:'IfStatement',Literal:'Literal',LabeledStatement:'LabeledStatement',LogicalExpression:'LogicalExpression',MemberExpression:'MemberExpression',NewExpression:'NewExpression',ObjectExpression:'ObjectExpression',Program:'Program',Property:'Property',ReturnStatement:'ReturnStatement',SequenceExpression:'SequenceExpression',SwitchStatement:'SwitchStatement',SwitchCase:'SwitchCase',ThisExpression:'ThisExpression',ThrowStatement:'ThrowStatement',TryStatement:'TryStatement',UnaryExpression:'UnaryExpression',UpdateExpression:'UpdateExpression',VariableDeclaration:'VariableDeclaration',VariableDeclarator:'VariableDeclarator',WhileStatement:'WhileStatement',WithStatement:'WithStatement'};PropertyKind={Data:1,Get:2,Set:4};// Error messages should be identical to V8.
Messages={UnexpectedToken:'Unexpected token %0',UnexpectedNumber:'Unexpected number',UnexpectedString:'Unexpected string',UnexpectedIdentifier:'Unexpected identifier',UnexpectedReserved:'Unexpected reserved word',UnexpectedEOS:'Unexpected end of input',NewlineAfterThrow:'Illegal newline after throw',InvalidRegExp:'Invalid regular expression',UnterminatedRegExp:'Invalid regular expression: missing /',InvalidLHSInAssignment:'Invalid left-hand side in assignment',InvalidLHSInForIn:'Invalid left-hand side in for-in',MultipleDefaultsInSwitch:'More than one default clause in switch statement',NoCatchOrFinally:'Missing catch or finally after try',UnknownLabel:'Undefined label \'%0\'',Redeclaration:'%0 \'%1\' has already been declared',IllegalContinue:'Illegal continue statement',IllegalBreak:'Illegal break statement',IllegalReturn:'Illegal return statement',StrictModeWith:'Strict mode code may not include a with statement',StrictCatchVariable:'Catch variable may not be eval or arguments in strict mode',StrictVarName:'Variable name may not be eval or arguments in strict mode',StrictParamName:'Parameter name eval or arguments is not allowed in strict mode',StrictParamDupe:'Strict mode function may not have duplicate parameter names',StrictFunctionName:'Function name may not be eval or arguments in strict mode',StrictOctalLiteral:'Octal literals are not allowed in strict mode.',StrictDelete:'Delete of an unqualified identifier in strict mode.',StrictDuplicateProperty:'Duplicate data property in object literal not allowed in strict mode',AccessorDataProperty:'Object literal may not have data and accessor property with the same name',AccessorGetSet:'Object literal may not have multiple get/set accessors with the same name',StrictLHSAssignment:'Assignment to eval or arguments is not allowed in strict mode',StrictLHSPostfix:'Postfix increment/decrement may not have eval or arguments operand in strict mode',StrictLHSPrefix:'Prefix increment/decrement may not have eval or arguments operand in strict mode',StrictReservedWord:'Use of future reserved word in strict mode'};// See also tools/generate-unicode-regex.py.
Regex={NonAsciiIdentifierStart:new RegExp('[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]'),NonAsciiIdentifierPart:new RegExp('[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]')};// Ensure the condition is true, otherwise throw an error.
// This is only to have a better contract semantic, i.e. another safety net
// to catch a logic error. The condition shall be fulfilled in normal case.
// Do NOT use this to enforce a certain condition on any user input.
function assert(condition,message){if(!condition){throw new Error('ASSERT: '+message);}}function isDecimalDigit(ch){return ch>=48&&ch<=57;// 0..9
}function isHexDigit(ch){return'0123456789abcdefABCDEF'.indexOf(ch)>=0;}function isOctalDigit(ch){return'01234567'.indexOf(ch)>=0;}// 7.2 White Space
function isWhiteSpace(ch){return ch===0x20||ch===0x09||ch===0x0B||ch===0x0C||ch===0xA0||ch>=0x1680&&[0x1680,0x180E,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2007,0x2008,0x2009,0x200A,0x202F,0x205F,0x3000,0xFEFF].indexOf(ch)>=0;}// 7.3 Line Terminators
function isLineTerminator(ch){return ch===0x0A||ch===0x0D||ch===0x2028||ch===0x2029;}// 7.6 Identifier Names and Identifiers
function isIdentifierStart(ch){return ch===0x24||ch===0x5F||// $ (dollar) and _ (underscore)
ch>=0x41&&ch<=0x5A||// A..Z
ch>=0x61&&ch<=0x7A||// a..z
ch===0x5C||// \ (backslash)
ch>=0x80&&Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch));}function isIdentifierPart(ch){return ch===0x24||ch===0x5F||// $ (dollar) and _ (underscore)
ch>=0x41&&ch<=0x5A||// A..Z
ch>=0x61&&ch<=0x7A||// a..z
ch>=0x30&&ch<=0x39||// 0..9
ch===0x5C||// \ (backslash)
ch>=0x80&&Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch));}// 7.6.1.2 Future Reserved Words
function isFutureReservedWord(id){switch(id){case'class':case'enum':case'export':case'extends':case'import':case'super':return true;default:return false;}}function isStrictModeReservedWord(id){switch(id){case'implements':case'interface':case'package':case'private':case'protected':case'public':case'static':case'yield':case'let':return true;default:return false;}}function isRestrictedWord(id){return id==='eval'||id==='arguments';}// 7.6.1.1 Keywords
function isKeyword(id){if(strict&&isStrictModeReservedWord(id)){return true;}// 'const' is specialized as Keyword in V8.
// 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.
// Some others are from future reserved words.
switch(id.length){case 2:return id==='if'||id==='in'||id==='do';case 3:return id==='var'||id==='for'||id==='new'||id==='try'||id==='let';case 4:return id==='this'||id==='else'||id==='case'||id==='void'||id==='with'||id==='enum';case 5:return id==='while'||id==='break'||id==='catch'||id==='throw'||id==='const'||id==='yield'||id==='class'||id==='super';case 6:return id==='return'||id==='typeof'||id==='delete'||id==='switch'||id==='export'||id==='import';case 7:return id==='default'||id==='finally'||id==='extends';case 8:return id==='function'||id==='continue'||id==='debugger';case 10:return id==='instanceof';default:return false;}}// 7.4 Comments
function addComment(type,value,start,end,loc){var comment,attacher;assert(typeof start==='number','Comment must have valid position');// Because the way the actual token is scanned, often the comments
// (if any) are skipped twice during the lexical analysis.
// Thus, we need to skip adding a comment if the comment array already
// handled it.
if(state.lastCommentStart>=start){return;}state.lastCommentStart=start;comment={type:type,value:value};if(extra.range){comment.range=[start,end];}if(extra.loc){comment.loc=loc;}extra.comments.push(comment);if(extra.attachComment){attacher={comment:comment,leading:null,trailing:null,range:[start,end]};extra.pendingComments.push(attacher);}}function skipSingleLineComment(offset){var start,loc,ch,comment;start=index-offset;loc={start:{line:lineNumber,column:index-lineStart-offset}};while(index<length){ch=source.charCodeAt(index);++index;if(isLineTerminator(ch)){if(extra.comments){comment=source.slice(start+offset,index-1);loc.end={line:lineNumber,column:index-lineStart-1};addComment('Line',comment,start,index-1,loc);}if(ch===13&&source.charCodeAt(index)===10){++index;}++lineNumber;lineStart=index;return;}}if(extra.comments){comment=source.slice(start+offset,index);loc.end={line:lineNumber,column:index-lineStart};addComment('Line',comment,start,index,loc);}}function skipMultiLineComment(){var start,loc,ch,comment;if(extra.comments){start=index-2;loc={start:{line:lineNumber,column:index-lineStart-2}};}while(index<length){ch=source.charCodeAt(index);if(isLineTerminator(ch)){if(ch===0x0D&&source.charCodeAt(index+1)===0x0A){++index;}++lineNumber;++index;lineStart=index;if(index>=length){throwError({},Messages.UnexpectedToken,'ILLEGAL');}}else if(ch===0x2A){// Block comment ends with '*/'.
if(source.charCodeAt(index+1)===0x2F){++index;++index;if(extra.comments){comment=source.slice(start+2,index-2);loc.end={line:lineNumber,column:index-lineStart};addComment('Block',comment,start,index,loc);}return;}++index;}else{++index;}}throwError({},Messages.UnexpectedToken,'ILLEGAL');}function skipComment(){var ch,start;start=index===0;while(index<length){ch=source.charCodeAt(index);if(isWhiteSpace(ch)){++index;}else if(isLineTerminator(ch)){++index;if(ch===0x0D&&source.charCodeAt(index)===0x0A){++index;}++lineNumber;lineStart=index;start=true;}else if(ch===0x2F){// U+002F is '/'
ch=source.charCodeAt(index+1);if(ch===0x2F){++index;++index;skipSingleLineComment(2);start=true;}else if(ch===0x2A){// U+002A is '*'
++index;++index;skipMultiLineComment();}else{break;}}else if(start&&ch===0x2D){// U+002D is '-'
// U+003E is '>'
if(source.charCodeAt(index+1)===0x2D&&source.charCodeAt(index+2)===0x3E){// '-->' is a single-line comment
index+=3;skipSingleLineComment(3);}else{break;}}else if(ch===0x3C){// U+003C is '<'
if(source.slice(index+1,index+4)==='!--'){++index;// `<`
++index;// `!`
++index;// `-`
++index;// `-`
skipSingleLineComment(4);}else{break;}}else{break;}}}function scanHexEscape(prefix){var i,len,ch,code=0;len=prefix==='u'?4:2;for(i=0;i<len;++i){if(index<length&&isHexDigit(source[index])){ch=source[index++];code=code*16+'0123456789abcdef'.indexOf(ch.toLowerCase());}else{return'';}}return String.fromCharCode(code);}function getEscapedIdentifier(){var ch,id;ch=source.charCodeAt(index++);id=String.fromCharCode(ch);// '\u' (U+005C, U+0075) denotes an escaped character.
if(ch===0x5C){if(source.charCodeAt(index)!==0x75){throwError({},Messages.UnexpectedToken,'ILLEGAL');}++index;ch=scanHexEscape('u');if(!ch||ch==='\\'||!isIdentifierStart(ch.charCodeAt(0))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}id=ch;}while(index<length){ch=source.charCodeAt(index);if(!isIdentifierPart(ch)){break;}++index;id+=String.fromCharCode(ch);// '\u' (U+005C, U+0075) denotes an escaped character.
if(ch===0x5C){id=id.substr(0,id.length-1);if(source.charCodeAt(index)!==0x75){throwError({},Messages.UnexpectedToken,'ILLEGAL');}++index;ch=scanHexEscape('u');if(!ch||ch==='\\'||!isIdentifierPart(ch.charCodeAt(0))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}id+=ch;}}return id;}function getIdentifier(){var start,ch;start=index++;while(index<length){ch=source.charCodeAt(index);if(ch===0x5C){// Blackslash (U+005C) marks Unicode escape sequence.
index=start;return getEscapedIdentifier();}if(isIdentifierPart(ch)){++index;}else{break;}}return source.slice(start,index);}function scanIdentifier(){var start,id,type;start=index;// Backslash (U+005C) starts an escaped character.
id=source.charCodeAt(index)===0x5C?getEscapedIdentifier():getIdentifier();// There is no keyword or literal with only one character.
// Thus, it must be an identifier.
if(id.length===1){type=Token.Identifier;}else if(isKeyword(id)){type=Token.Keyword;}else if(id==='null'){type=Token.NullLiteral;}else if(id==='true'||id==='false'){type=Token.BooleanLiteral;}else{type=Token.Identifier;}return{type:type,value:id,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}// 7.7 Punctuators
function scanPunctuator(){var start=index,code=source.charCodeAt(index),code2,ch1=source[index],ch2,ch3,ch4;switch(code){// Check for most common single-character punctuators.
case 0x2E:// . dot
case 0x28:// ( open bracket
case 0x29:// ) close bracket
case 0x3B:// ; semicolon
case 0x2C:// , comma
case 0x7B:// { open curly brace
case 0x7D:// } close curly brace
case 0x5B:// [
case 0x5D:// ]
case 0x3A:// :
case 0x3F:// ?
case 0x7E:// ~
++index;if(extra.tokenize){if(code===0x28){extra.openParenToken=extra.tokens.length;}else if(code===0x7B){extra.openCurlyToken=extra.tokens.length;}}return{type:Token.Punctuator,value:String.fromCharCode(code),lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};default:code2=source.charCodeAt(index+1);// '=' (U+003D) marks an assignment or comparison operator.
if(code2===0x3D){switch(code){case 0x25:// %
case 0x26:// &
case 0x2A:// *:
case 0x2B:// +
case 0x2D:// -
case 0x2F:// /
case 0x3C:// <
case 0x3E:// >
case 0x5E:// ^
case 0x7C:// |
index+=2;return{type:Token.Punctuator,value:String.fromCharCode(code)+String.fromCharCode(code2),lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};case 0x21:// !
case 0x3D:// =
index+=2;// !== and ===
if(source.charCodeAt(index)===0x3D){++index;}return{type:Token.Punctuator,value:source.slice(start,index),lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};default:break;}}break;}// Peek more characters.
ch2=source[index+1];ch3=source[index+2];ch4=source[index+3];// 4-character punctuator: >>>=
if(ch1==='>'&&ch2==='>'&&ch3==='>'){if(ch4==='='){index+=4;return{type:Token.Punctuator,value:'>>>=',lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}}// 3-character punctuators: === !== >>> <<= >>=
if(ch1==='>'&&ch2==='>'&&ch3==='>'){index+=3;return{type:Token.Punctuator,value:'>>>',lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}if(ch1==='<'&&ch2==='<'&&ch3==='='){index+=3;return{type:Token.Punctuator,value:'<<=',lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}if(ch1==='>'&&ch2==='>'&&ch3==='='){index+=3;return{type:Token.Punctuator,value:'>>=',lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}// Other 2-character punctuators: ++ -- << >> && ||
if(ch1===ch2&&'+-<>&|'.indexOf(ch1)>=0){index+=2;return{type:Token.Punctuator,value:ch1+ch2,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}if('<>=!+-*%&|^/'.indexOf(ch1)>=0){++index;return{type:Token.Punctuator,value:ch1,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}throwError({},Messages.UnexpectedToken,'ILLEGAL');}// 7.8.3 Numeric Literals
function scanHexLiteral(start){var number='';while(index<length){if(!isHexDigit(source[index])){break;}number+=source[index++];}if(number.length===0){throwError({},Messages.UnexpectedToken,'ILLEGAL');}if(isIdentifierStart(source.charCodeAt(index))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}return{type:Token.NumericLiteral,value:parseInt('0x'+number,16),lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}function scanOctalLiteral(start){var number='0'+source[index++];while(index<length){if(!isOctalDigit(source[index])){break;}number+=source[index++];}if(isIdentifierStart(source.charCodeAt(index))||isDecimalDigit(source.charCodeAt(index))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}return{type:Token.NumericLiteral,value:parseInt(number,8),octal:true,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}function scanNumericLiteral(){var number,start,ch;ch=source[index];assert(isDecimalDigit(ch.charCodeAt(0))||ch==='.','Numeric literal must start with a decimal digit or a decimal point');start=index;number='';if(ch!=='.'){number=source[index++];ch=source[index];// Hex number starts with '0x'.
// Octal number starts with '0'.
if(number==='0'){if(ch==='x'||ch==='X'){++index;return scanHexLiteral(start);}if(isOctalDigit(ch)){return scanOctalLiteral(start);}// decimal number starts with '0' such as '09' is illegal.
if(ch&&isDecimalDigit(ch.charCodeAt(0))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}}while(isDecimalDigit(source.charCodeAt(index))){number+=source[index++];}ch=source[index];}if(ch==='.'){number+=source[index++];while(isDecimalDigit(source.charCodeAt(index))){number+=source[index++];}ch=source[index];}if(ch==='e'||ch==='E'){number+=source[index++];ch=source[index];if(ch==='+'||ch==='-'){number+=source[index++];}if(isDecimalDigit(source.charCodeAt(index))){while(isDecimalDigit(source.charCodeAt(index))){number+=source[index++];}}else{throwError({},Messages.UnexpectedToken,'ILLEGAL');}}if(isIdentifierStart(source.charCodeAt(index))){throwError({},Messages.UnexpectedToken,'ILLEGAL');}return{type:Token.NumericLiteral,value:parseFloat(number),lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}// 7.8.4 String Literals
function scanStringLiteral(){var str='',quote,start,ch,code,unescaped,restore,octal=false;quote=source[index];assert(quote==='\''||quote==='"','String literal must starts with a quote');start=index;++index;while(index<length){ch=source[index++];if(ch===quote){quote='';break;}else if(ch==='\\'){ch=source[index++];if(!ch||!isLineTerminator(ch.charCodeAt(0))){switch(ch){case'n':str+='\n';break;case'r':str+='\r';break;case't':str+='\t';break;case'u':case'x':restore=index;unescaped=scanHexEscape(ch);if(unescaped){str+=unescaped;}else{index=restore;str+=ch;}break;case'b':str+='\b';break;case'f':str+='\f';break;case'v':str+='\x0B';break;default:if(isOctalDigit(ch)){code='01234567'.indexOf(ch);// \0 is not octal escape sequence
if(code!==0){octal=true;}if(index<length&&isOctalDigit(source[index])){octal=true;code=code*8+'01234567'.indexOf(source[index++]);// 3 digits are only allowed when string starts
// with 0, 1, 2, 3
if('0123'.indexOf(ch)>=0&&index<length&&isOctalDigit(source[index])){code=code*8+'01234567'.indexOf(source[index++]);}}str+=String.fromCharCode(code);}else{str+=ch;}break;}}else{++lineNumber;if(ch==='\r'&&source[index]==='\n'){++index;}lineStart=index;}}else if(isLineTerminator(ch.charCodeAt(0))){break;}else{str+=ch;}}if(quote!==''){throwError({},Messages.UnexpectedToken,'ILLEGAL');}return{type:Token.StringLiteral,value:str,octal:octal,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}function scanRegExp(){var str,ch,start,pattern,flags,value,classMarker=false,restore,terminated=false;lookahead=null;skipComment();start=index;ch=source[index];assert(ch==='/','Regular expression literal must start with a slash');str=source[index++];while(index<length){ch=source[index++];str+=ch;if(ch==='\\'){ch=source[index++];// ECMA-262 7.8.5
if(isLineTerminator(ch.charCodeAt(0))){throwError({},Messages.UnterminatedRegExp);}str+=ch;}else if(isLineTerminator(ch.charCodeAt(0))){throwError({},Messages.UnterminatedRegExp);}else if(classMarker){if(ch===']'){classMarker=false;}}else{if(ch==='/'){terminated=true;break;}else if(ch==='['){classMarker=true;}}}if(!terminated){throwError({},Messages.UnterminatedRegExp);}// Exclude leading and trailing slash.
pattern=str.substr(1,str.length-2);flags='';while(index<length){ch=source[index];if(!isIdentifierPart(ch.charCodeAt(0))){break;}++index;if(ch==='\\'&&index<length){ch=source[index];if(ch==='u'){++index;restore=index;ch=scanHexEscape('u');if(ch){flags+=ch;for(str+='\\u';restore<index;++restore){str+=source[restore];}}else{index=restore;flags+='u';str+='\\u';}}else{str+='\\';}}else{flags+=ch;str+=ch;}}try{value=new RegExp(pattern,flags);}catch(e){throwError({},Messages.InvalidRegExp);}if(extra.tokenize){return{type:Token.RegularExpression,value:value,lineNumber:lineNumber,lineStart:lineStart,range:[start,index]};}return{literal:str,value:value,range:[start,index]};}function collectRegex(){var pos,loc,regex,token;skipComment();pos=index;loc={start:{line:lineNumber,column:index-lineStart}};regex=scanRegExp();loc.end={line:lineNumber,column:index-lineStart};if(!extra.tokenize){// Pop the previous token, which is likely '/' or '/='
if(extra.tokens.length>0){token=extra.tokens[extra.tokens.length-1];if(token.range[0]===pos&&token.type==='Punctuator'){if(token.value==='/'||token.value==='/='){extra.tokens.pop();}}}extra.tokens.push({type:'RegularExpression',value:regex.literal,range:[pos,index],loc:loc});}return regex;}function isIdentifierName(token){return token.type===Token.Identifier||token.type===Token.Keyword||token.type===Token.BooleanLiteral||token.type===Token.NullLiteral;}function advanceSlash(){var prevToken,checkToken;// Using the following algorithm:
// https://github.com/mozilla/sweet.js/wiki/design
prevToken=extra.tokens[extra.tokens.length-1];if(!prevToken){// Nothing before that: it cannot be a division.
return collectRegex();}if(prevToken.type==='Punctuator'){if(prevToken.value===']'){return scanPunctuator();}if(prevToken.value===')'){checkToken=extra.tokens[extra.openParenToken-1];if(checkToken&&checkToken.type==='Keyword'&&(checkToken.value==='if'||checkToken.value==='while'||checkToken.value==='for'||checkToken.value==='with')){return collectRegex();}return scanPunctuator();}if(prevToken.value==='}'){// Dividing a function by anything makes little sense,
// but we have to check for that.
if(extra.tokens[extra.openCurlyToken-3]&&extra.tokens[extra.openCurlyToken-3].type==='Keyword'){// Anonymous function.
checkToken=extra.tokens[extra.openCurlyToken-4];if(!checkToken){return scanPunctuator();}}else if(extra.tokens[extra.openCurlyToken-4]&&extra.tokens[extra.openCurlyToken-4].type==='Keyword'){// Named function.
checkToken=extra.tokens[extra.openCurlyToken-5];if(!checkToken){return collectRegex();}}else{return scanPunctuator();}// checkToken determines whether the function is
// a declaration or an expression.
if(FnExprTokens.indexOf(checkToken.value)>=0){// It is an expression.
return scanPunctuator();}// It is a declaration.
return collectRegex();}return collectRegex();}if(prevToken.type==='Keyword'){return collectRegex();}return scanPunctuator();}function advance(){var ch;skipComment();if(index>=length){return{type:Token.EOF,lineNumber:lineNumber,lineStart:lineStart,range:[index,index]};}ch=source.charCodeAt(index);// Very common: ( and ) and ;
if(ch===0x28||ch===0x29||ch===0x3A){return scanPunctuator();}// String literal starts with single quote (U+0027) or double quote (U+0022).
if(ch===0x27||ch===0x22){return scanStringLiteral();}if(isIdentifierStart(ch)){return scanIdentifier();}// Dot (.) U+002E can also start a floating-point number, hence the need
// to check the next character.
if(ch===0x2E){if(isDecimalDigit(source.charCodeAt(index+1))){return scanNumericLiteral();}return scanPunctuator();}if(isDecimalDigit(ch)){return scanNumericLiteral();}// Slash (/) U+002F can also start a regex.
if(extra.tokenize&&ch===0x2F){return advanceSlash();}return scanPunctuator();}function collectToken(){var start,loc,token,range,value;skipComment();start=index;loc={start:{line:lineNumber,column:index-lineStart}};token=advance();loc.end={line:lineNumber,column:index-lineStart};if(token.type!==Token.EOF){range=[token.range[0],token.range[1]];value=source.slice(token.range[0],token.range[1]);extra.tokens.push({type:TokenName[token.type],value:value,range:range,loc:loc});}return token;}function lex(){var token;token=lookahead;index=token.range[1];lineNumber=token.lineNumber;lineStart=token.lineStart;lookahead=typeof extra.tokens!=='undefined'?collectToken():advance();index=token.range[1];lineNumber=token.lineNumber;lineStart=token.lineStart;return token;}function peek(){var pos,line,start;pos=index;line=lineNumber;start=lineStart;lookahead=typeof extra.tokens!=='undefined'?collectToken():advance();index=pos;lineNumber=line;lineStart=start;}SyntaxTreeDelegate={name:'SyntaxTree',markStart:function markStart(){skipComment();if(extra.loc){state.markerStack.push(index-lineStart);state.markerStack.push(lineNumber);}if(extra.range){state.markerStack.push(index);}},processComment:function processComment(node){var i,attacher,pos,len,candidate;if(typeof node.type==='undefined'||node.type===Syntax.Program){return;}// Check for possible additional trailing comments.
peek();for(i=0;i<extra.pendingComments.length;++i){attacher=extra.pendingComments[i];if(node.range[0]>=attacher.comment.range[1]){candidate=attacher.leading;if(candidate){pos=candidate.range[0];len=candidate.range[1]-pos;if(node.range[0]<=pos&&node.range[1]-node.range[0]>=len){attacher.leading=node;}}else{attacher.leading=node;}}if(node.range[1]<=attacher.comment.range[0]){candidate=attacher.trailing;if(candidate){pos=candidate.range[0];len=candidate.range[1]-pos;if(node.range[0]<=pos&&node.range[1]-node.range[0]>=len){attacher.trailing=node;}}else{attacher.trailing=node;}}}},markEnd:function markEnd(node){if(extra.range){node.range=[state.markerStack.pop(),index];}if(extra.loc){node.loc={start:{line:state.markerStack.pop(),column:state.markerStack.pop()},end:{line:lineNumber,column:index-lineStart}};this.postProcess(node);}if(extra.attachComment){this.processComment(node);}return node;},markEndIf:function markEndIf(node){if(node.range||node.loc){if(extra.loc){state.markerStack.pop();state.markerStack.pop();}if(extra.range){state.markerStack.pop();}}else{this.markEnd(node);}return node;},postProcess:function postProcess(node){if(extra.source){node.loc.source=extra.source;}return node;},createArrayExpression:function createArrayExpression(elements){return{type:Syntax.ArrayExpression,elements:elements};},createAssignmentExpression:function createAssignmentExpression(operator,left,right){return{type:Syntax.AssignmentExpression,operator:operator,left:left,right:right};},createBinaryExpression:function createBinaryExpression(operator,left,right){var type=operator==='||'||operator==='&&'?Syntax.LogicalExpression:Syntax.BinaryExpression;return{type:type,operator:operator,left:left,right:right};},createBlockStatement:function createBlockStatement(body){return{type:Syntax.BlockStatement,body:body};},createBreakStatement:function createBreakStatement(label){return{type:Syntax.BreakStatement,label:label};},createCallExpression:function createCallExpression(callee,args){return{type:Syntax.CallExpression,callee:callee,'arguments':args};},createCatchClause:function createCatchClause(param,body){return{type:Syntax.CatchClause,param:param,body:body};},createConditionalExpression:function createConditionalExpression(test,consequent,alternate){return{type:Syntax.ConditionalExpression,test:test,consequent:consequent,alternate:alternate};},createContinueStatement:function createContinueStatement(label){return{type:Syntax.ContinueStatement,label:label};},createDebuggerStatement:function createDebuggerStatement(){return{type:Syntax.DebuggerStatement};},createDoWhileStatement:function createDoWhileStatement(body,test){return{type:Syntax.DoWhileStatement,body:body,test:test};},createEmptyStatement:function createEmptyStatement(){return{type:Syntax.EmptyStatement};},createExpressionStatement:function createExpressionStatement(expression){return{type:Syntax.ExpressionStatement,expression:expression};},createForStatement:function createForStatement(init,test,update,body){return{type:Syntax.ForStatement,init:init,test:test,update:update,body:body};},createForInStatement:function createForInStatement(left,right,body){return{type:Syntax.ForInStatement,left:left,right:right,body:body,each:false};},createFunctionDeclaration:function createFunctionDeclaration(id,params,defaults,body){return{type:Syntax.FunctionDeclaration,id:id,params:params,defaults:defaults,body:body,rest:null,generator:false,expression:false};},createFunctionExpression:function createFunctionExpression(id,params,defaults,body){return{type:Syntax.FunctionExpression,id:id,params:params,defaults:defaults,body:body,rest:null,generator:false,expression:false};},createIdentifier:function createIdentifier(name){return{type:Syntax.Identifier,name:name};},createIfStatement:function createIfStatement(test,consequent,alternate){return{type:Syntax.IfStatement,test:test,consequent:consequent,alternate:alternate};},createLabeledStatement:function createLabeledStatement(label,body){return{type:Syntax.LabeledStatement,label:label,body:body};},createLiteral:function createLiteral(token){return{type:Syntax.Literal,value:token.value,raw:source.slice(token.range[0],token.range[1])};},createMemberExpression:function createMemberExpression(accessor,object,property){return{type:Syntax.MemberExpression,computed:accessor==='[',object:object,property:property};},createNewExpression:function createNewExpression(callee,args){return{type:Syntax.NewExpression,callee:callee,'arguments':args};},createObjectExpression:function createObjectExpression(properties){return{type:Syntax.ObjectExpression,properties:properties};},createPostfixExpression:function createPostfixExpression(operator,argument){return{type:Syntax.UpdateExpression,operator:operator,argument:argument,prefix:false};},createProgram:function createProgram(body){return{type:Syntax.Program,body:body};},createProperty:function createProperty(kind,key,value){return{type:Syntax.Property,key:key,value:value,kind:kind};},createReturnStatement:function createReturnStatement(argument){return{type:Syntax.ReturnStatement,argument:argument};},createSequenceExpression:function createSequenceExpression(expressions){return{type:Syntax.SequenceExpression,expressions:expressions};},createSwitchCase:function createSwitchCase(test,consequent){return{type:Syntax.SwitchCase,test:test,consequent:consequent};},createSwitchStatement:function createSwitchStatement(discriminant,cases){return{type:Syntax.SwitchStatement,discriminant:discriminant,cases:cases};},createThisExpression:function createThisExpression(){return{type:Syntax.ThisExpression};},createThrowStatement:function createThrowStatement(argument){return{type:Syntax.ThrowStatement,argument:argument};},createTryStatement:function createTryStatement(block,guardedHandlers,handlers,finalizer){return{type:Syntax.TryStatement,block:block,guardedHandlers:guardedHandlers,handlers:handlers,finalizer:finalizer};},createUnaryExpression:function createUnaryExpression(operator,argument){if(operator==='++'||operator==='--'){return{type:Syntax.UpdateExpression,operator:operator,argument:argument,prefix:true};}return{type:Syntax.UnaryExpression,operator:operator,argument:argument,prefix:true};},createVariableDeclaration:function createVariableDeclaration(declarations,kind){return{type:Syntax.VariableDeclaration,declarations:declarations,kind:kind};},createVariableDeclarator:function createVariableDeclarator(id,init){return{type:Syntax.VariableDeclarator,id:id,init:init};},createWhileStatement:function createWhileStatement(test,body){return{type:Syntax.WhileStatement,test:test,body:body};},createWithStatement:function createWithStatement(object,body){return{type:Syntax.WithStatement,object:object,body:body};}};// Return true if there is a line terminator before the next token.
function peekLineTerminator(){var pos,line,start,found;pos=index;line=lineNumber;start=lineStart;skipComment();found=lineNumber!==line;index=pos;lineNumber=line;lineStart=start;return found;}// Throw an exception
function throwError(token,messageFormat){var error,args=Array.prototype.slice.call(arguments,2),msg=messageFormat.replace(/%(\d)/g,function(whole,index){assert(index<args.length,'Message reference must be in range');return args[index];});if(typeof token.lineNumber==='number'){error=new Error('Line '+token.lineNumber+': '+msg);error.index=token.range[0];error.lineNumber=token.lineNumber;error.column=token.range[0]-lineStart+1;}else{error=new Error('Line '+lineNumber+': '+msg);error.index=index;error.lineNumber=lineNumber;error.column=index-lineStart+1;}error.description=msg;throw error;}function throwErrorTolerant(){try{throwError.apply(null,arguments);}catch(e){if(extra.errors){extra.errors.push(e);}else{throw e;}}}// Throw an exception because of the token.
function throwUnexpected(token){if(token.type===Token.EOF){throwError(token,Messages.UnexpectedEOS);}if(token.type===Token.NumericLiteral){throwError(token,Messages.UnexpectedNumber);}if(token.type===Token.StringLiteral){throwError(token,Messages.UnexpectedString);}if(token.type===Token.Identifier){throwError(token,Messages.UnexpectedIdentifier);}if(token.type===Token.Keyword){if(isFutureReservedWord(token.value)){throwError(token,Messages.UnexpectedReserved);}else if(strict&&isStrictModeReservedWord(token.value)){throwErrorTolerant(token,Messages.StrictReservedWord);return;}throwError(token,Messages.UnexpectedToken,token.value);}// BooleanLiteral, NullLiteral, or Punctuator.
throwError(token,Messages.UnexpectedToken,token.value);}// Expect the next token to match the specified punctuator.
// If not, an exception will be thrown.
function expect(value){var token=lex();if(token.type!==Token.Punctuator||token.value!==value){throwUnexpected(token);}}// Expect the next token to match the specified keyword.
// If not, an exception will be thrown.
function expectKeyword(keyword){var token=lex();if(token.type!==Token.Keyword||token.value!==keyword){throwUnexpected(token);}}// Return true if the next token matches the specified punctuator.
function match(value){return lookahead.type===Token.Punctuator&&lookahead.value===value;}// Return true if the next token matches the specified keyword
function matchKeyword(keyword){return lookahead.type===Token.Keyword&&lookahead.value===keyword;}// Return true if the next token is an assignment operator
function matchAssign(){var op;if(lookahead.type!==Token.Punctuator){return false;}op=lookahead.value;return op==='='||op==='*='||op==='/='||op==='%='||op==='+='||op==='-='||op==='<<='||op==='>>='||op==='>>>='||op==='&='||op==='^='||op==='|=';}function consumeSemicolon(){var line;// Catch the very common case first: immediately a semicolon (U+003B).
if(source.charCodeAt(index)===0x3B){lex();return;}line=lineNumber;skipComment();if(lineNumber!==line){return;}if(match(';')){lex();return;}if(lookahead.type!==Token.EOF&&!match('}')){throwUnexpected(lookahead);}}// Return true if provided expression is LeftHandSideExpression
function isLeftHandSide(expr){return expr.type===Syntax.Identifier||expr.type===Syntax.MemberExpression;}// 11.1.4 Array Initialiser
function parseArrayInitialiser(){var elements=[];expect('[');while(!match(']')){if(match(',')){lex();elements.push(null);}else{elements.push(parseAssignmentExpression());if(!match(']')){expect(',');}}}expect(']');return delegate.createArrayExpression(elements);}// 11.1.5 Object Initialiser
function parsePropertyFunction(param,first){var previousStrict,body;previousStrict=strict;delegate.markStart();body=parseFunctionSourceElements();if(first&&strict&&isRestrictedWord(param[0].name)){throwErrorTolerant(first,Messages.StrictParamName);}strict=previousStrict;return delegate.markEnd(delegate.createFunctionExpression(null,param,[],body));}function parseObjectPropertyKey(){var token;delegate.markStart();token=lex();// Note: This function is called only from parseObjectProperty(), where
// EOF and Punctuator tokens are already filtered out.
if(token.type===Token.StringLiteral||token.type===Token.NumericLiteral){if(strict&&token.octal){throwErrorTolerant(token,Messages.StrictOctalLiteral);}return delegate.markEnd(delegate.createLiteral(token));}return delegate.markEnd(delegate.createIdentifier(token.value));}function parseObjectProperty(){var token,key,id,value,param;token=lookahead;delegate.markStart();if(token.type===Token.Identifier){id=parseObjectPropertyKey();// Property Assignment: Getter and Setter.
if(token.value==='get'&&!match(':')){key=parseObjectPropertyKey();expect('(');expect(')');value=parsePropertyFunction([]);return delegate.markEnd(delegate.createProperty('get',key,value));}if(token.value==='set'&&!match(':')){key=parseObjectPropertyKey();expect('(');token=lookahead;if(token.type!==Token.Identifier){expect(')');throwErrorTolerant(token,Messages.UnexpectedToken,token.value);value=parsePropertyFunction([]);}else{param=[parseVariableIdentifier()];expect(')');value=parsePropertyFunction(param,token);}return delegate.markEnd(delegate.createProperty('set',key,value));}expect(':');value=parseAssignmentExpression();return delegate.markEnd(delegate.createProperty('init',id,value));}if(token.type===Token.EOF||token.type===Token.Punctuator){throwUnexpected(token);}else{key=parseObjectPropertyKey();expect(':');value=parseAssignmentExpression();return delegate.markEnd(delegate.createProperty('init',key,value));}}function parseObjectInitialiser(){var properties=[],property,name,key,kind,map={},toString=String;expect('{');while(!match('}')){property=parseObjectProperty();if(property.key.type===Syntax.Identifier){name=property.key.name;}else{name=toString(property.key.value);}kind=property.kind==='init'?PropertyKind.Data:property.kind==='get'?PropertyKind.Get:PropertyKind.Set;key='$'+name;if(Object.prototype.hasOwnProperty.call(map,key)){if(map[key]===PropertyKind.Data){if(strict&&kind===PropertyKind.Data){throwErrorTolerant({},Messages.StrictDuplicateProperty);}else if(kind!==PropertyKind.Data){throwErrorTolerant({},Messages.AccessorDataProperty);}}else{if(kind===PropertyKind.Data){throwErrorTolerant({},Messages.AccessorDataProperty);}else if(map[key]&kind){throwErrorTolerant({},Messages.AccessorGetSet);}}map[key]|=kind;}else{map[key]=kind;}properties.push(property);if(!match('}')){expect(',');}}expect('}');return delegate.createObjectExpression(properties);}// 11.1.6 The Grouping Operator
function parseGroupExpression(){var expr;expect('(');expr=parseExpression();expect(')');return expr;}// 11.1 Primary Expressions
function parsePrimaryExpression(){var type,token,expr;if(match('(')){return parseGroupExpression();}type=lookahead.type;delegate.markStart();if(type===Token.Identifier){expr=delegate.createIdentifier(lex().value);}else if(type===Token.StringLiteral||type===Token.NumericLiteral){if(strict&&lookahead.octal){throwErrorTolerant(lookahead,Messages.StrictOctalLiteral);}expr=delegate.createLiteral(lex());}else if(type===Token.Keyword){if(matchKeyword('this')){lex();expr=delegate.createThisExpression();}else if(matchKeyword('function')){expr=parseFunctionExpression();}}else if(type===Token.BooleanLiteral){token=lex();token.value=token.value==='true';expr=delegate.createLiteral(token);}else if(type===Token.NullLiteral){token=lex();token.value=null;expr=delegate.createLiteral(token);}else if(match('[')){expr=parseArrayInitialiser();}else if(match('{')){expr=parseObjectInitialiser();}else if(match('/')||match('/=')){if(typeof extra.tokens!=='undefined'){expr=delegate.createLiteral(collectRegex());}else{expr=delegate.createLiteral(scanRegExp());}peek();}if(expr){return delegate.markEnd(expr);}throwUnexpected(lex());}// 11.2 Left-Hand-Side Expressions
function parseArguments(){var args=[];expect('(');if(!match(')')){while(index<length){args.push(parseAssignmentExpression());if(match(')')){break;}expect(',');}}expect(')');return args;}function parseNonComputedProperty(){var token;delegate.markStart();token=lex();if(!isIdentifierName(token)){throwUnexpected(token);}return delegate.markEnd(delegate.createIdentifier(token.value));}function parseNonComputedMember(){expect('.');return parseNonComputedProperty();}function parseComputedMember(){var expr;expect('[');expr=parseExpression();expect(']');return expr;}function parseNewExpression(){var callee,args;delegate.markStart();expectKeyword('new');callee=parseLeftHandSideExpression();args=match('(')?parseArguments():[];return delegate.markEnd(delegate.createNewExpression(callee,args));}function parseLeftHandSideExpressionAllowCall(){var marker,previousAllowIn,expr,args,property;marker=createLocationMarker();previousAllowIn=state.allowIn;state.allowIn=true;expr=matchKeyword('new')?parseNewExpression():parsePrimaryExpression();state.allowIn=previousAllowIn;while(match('.')||match('[')||match('(')){if(match('(')){args=parseArguments();expr=delegate.createCallExpression(expr,args);}else if(match('[')){property=parseComputedMember();expr=delegate.createMemberExpression('[',expr,property);}else{property=parseNonComputedMember();expr=delegate.createMemberExpression('.',expr,property);}if(marker){marker.apply(expr);}}return expr;}function parseLeftHandSideExpression(){var marker,previousAllowIn,expr,property;marker=createLocationMarker();previousAllowIn=state.allowIn;expr=matchKeyword('new')?parseNewExpression():parsePrimaryExpression();state.allowIn=previousAllowIn;while(match('.')||match('[')){if(match('[')){property=parseComputedMember();expr=delegate.createMemberExpression('[',expr,property);}else{property=parseNonComputedMember();expr=delegate.createMemberExpression('.',expr,property);}if(marker){marker.apply(expr);}}return expr;}// 11.3 Postfix Expressions
function parsePostfixExpression(){var expr,token;delegate.markStart();expr=parseLeftHandSideExpressionAllowCall();if(lookahead.type===Token.Punctuator){if((match('++')||match('--'))&&!peekLineTerminator()){// 11.3.1, 11.3.2
if(strict&&expr.type===Syntax.Identifier&&isRestrictedWord(expr.name)){throwErrorTolerant({},Messages.StrictLHSPostfix);}if(!isLeftHandSide(expr)){throwErrorTolerant({},Messages.InvalidLHSInAssignment);}token=lex();expr=delegate.createPostfixExpression(token.value,expr);}}return delegate.markEndIf(expr);}// 11.4 Unary Operators
function parseUnaryExpression(){var token,expr;delegate.markStart();if(lookahead.type!==Token.Punctuator&&lookahead.type!==Token.Keyword){expr=parsePostfixExpression();}else if(match('++')||match('--')){token=lex();expr=parseUnaryExpression();// 11.4.4, 11.4.5
if(strict&&expr.type===Syntax.Identifier&&isRestrictedWord(expr.name)){throwErrorTolerant({},Messages.StrictLHSPrefix);}if(!isLeftHandSide(expr)){throwErrorTolerant({},Messages.InvalidLHSInAssignment);}expr=delegate.createUnaryExpression(token.value,expr);}else if(match('+')||match('-')||match('~')||match('!')){token=lex();expr=parseUnaryExpression();expr=delegate.createUnaryExpression(token.value,expr);}else if(matchKeyword('delete')||matchKeyword('void')||matchKeyword('typeof')){token=lex();expr=parseUnaryExpression();expr=delegate.createUnaryExpression(token.value,expr);if(strict&&expr.operator==='delete'&&expr.argument.type===Syntax.Identifier){throwErrorTolerant({},Messages.StrictDelete);}}else{expr=parsePostfixExpression();}return delegate.markEndIf(expr);}function binaryPrecedence(token,allowIn){var prec=0;if(token.type!==Token.Punctuator&&token.type!==Token.Keyword){return 0;}switch(token.value){case'||':prec=1;break;case'&&':prec=2;break;case'|':prec=3;break;case'^':prec=4;break;case'&':prec=5;break;case'==':case'!=':case'===':case'!==':prec=6;break;case'<':case'>':case'<=':case'>=':case'instanceof':prec=7;break;case'in':prec=allowIn?7:0;break;case'<<':case'>>':case'>>>':prec=8;break;case'+':case'-':prec=9;break;case'*':case'/':case'%':prec=11;break;default:break;}return prec;}// 11.5 Multiplicative Operators
// 11.6 Additive Operators
// 11.7 Bitwise Shift Operators
// 11.8 Relational Operators
// 11.9 Equality Operators
// 11.10 Binary Bitwise Operators
// 11.11 Binary Logical Operators
function parseBinaryExpression(){var marker,markers,expr,token,prec,stack,right,operator,left,i;marker=createLocationMarker();left=parseUnaryExpression();token=lookahead;prec=binaryPrecedence(token,state.allowIn);if(prec===0){return left;}token.prec=prec;lex();markers=[marker,createLocationMarker()];right=parseUnaryExpression();stack=[left,token,right];while((prec=binaryPrecedence(lookahead,state.allowIn))>0){// Reduce: make a binary expression from the three topmost entries.
while(stack.length>2&&prec<=stack[stack.length-2].prec){right=stack.pop();operator=stack.pop().value;left=stack.pop();expr=delegate.createBinaryExpression(operator,left,right);markers.pop();marker=markers.pop();if(marker){marker.apply(expr);}stack.push(expr);markers.push(marker);}// Shift.
token=lex();token.prec=prec;stack.push(token);markers.push(createLocationMarker());expr=parseUnaryExpression();stack.push(expr);}// Final reduce to clean-up the stack.
i=stack.length-1;expr=stack[i];markers.pop();while(i>1){expr=delegate.createBinaryExpression(stack[i-1].value,stack[i-2],expr);i-=2;marker=markers.pop();if(marker){marker.apply(expr);}}return expr;}// 11.12 Conditional Operator
function parseConditionalExpression(){var expr,previousAllowIn,consequent,alternate;delegate.markStart();expr=parseBinaryExpression();if(match('?')){lex();previousAllowIn=state.allowIn;state.allowIn=true;consequent=parseAssignmentExpression();state.allowIn=previousAllowIn;expect(':');alternate=parseAssignmentExpression();expr=delegate.markEnd(delegate.createConditionalExpression(expr,consequent,alternate));}else{delegate.markEnd({});}return expr;}// 11.13 Assignment Operators
function parseAssignmentExpression(){var token,left,right,node;token=lookahead;delegate.markStart();node=left=parseConditionalExpression();if(matchAssign()){// LeftHandSideExpression
if(!isLeftHandSide(left)){throwErrorTolerant({},Messages.InvalidLHSInAssignment);}// 11.13.1
if(strict&&left.type===Syntax.Identifier&&isRestrictedWord(left.name)){throwErrorTolerant(token,Messages.StrictLHSAssignment);}token=lex();right=parseAssignmentExpression();node=delegate.createAssignmentExpression(token.value,left,right);}return delegate.markEndIf(node);}// 11.14 Comma Operator
function parseExpression(){var expr;delegate.markStart();expr=parseAssignmentExpression();if(match(',')){expr=delegate.createSequenceExpression([expr]);while(index<length){if(!match(',')){break;}lex();expr.expressions.push(parseAssignmentExpression());}}return delegate.markEndIf(expr);}// 12.1 Block
function parseStatementList(){var list=[],statement;while(index<length){if(match('}')){break;}statement=parseSourceElement();if(typeof statement==='undefined'){break;}list.push(statement);}return list;}function parseBlock(){var block;delegate.markStart();expect('{');block=parseStatementList();expect('}');return delegate.markEnd(delegate.createBlockStatement(block));}// 12.2 Variable Statement
function parseVariableIdentifier(){var token;delegate.markStart();token=lex();if(token.type!==Token.Identifier){throwUnexpected(token);}return delegate.markEnd(delegate.createIdentifier(token.value));}function parseVariableDeclaration(kind){var init=null,id;delegate.markStart();id=parseVariableIdentifier();// 12.2.1
if(strict&&isRestrictedWord(id.name)){throwErrorTolerant({},Messages.StrictVarName);}if(kind==='const'){expect('=');init=parseAssignmentExpression();}else if(match('=')){lex();init=parseAssignmentExpression();}return delegate.markEnd(delegate.createVariableDeclarator(id,init));}function parseVariableDeclarationList(kind){var list=[];do{list.push(parseVariableDeclaration(kind));if(!match(',')){break;}lex();}while(index<length);return list;}function parseVariableStatement(){var declarations;expectKeyword('var');declarations=parseVariableDeclarationList();consumeSemicolon();return delegate.createVariableDeclaration(declarations,'var');}// kind may be `const` or `let`
// Both are experimental and not in the specification yet.
// see http://wiki.ecmascript.org/doku.php?id=harmony:const
// and http://wiki.ecmascript.org/doku.php?id=harmony:let
function parseConstLetDeclaration(kind){var declarations;delegate.markStart();expectKeyword(kind);declarations=parseVariableDeclarationList(kind);consumeSemicolon();return delegate.markEnd(delegate.createVariableDeclaration(declarations,kind));}// 12.3 Empty Statement
function parseEmptyStatement(){expect(';');return delegate.createEmptyStatement();}// 12.4 Expression Statement
function parseExpressionStatement(){var expr=parseExpression();consumeSemicolon();return delegate.createExpressionStatement(expr);}// 12.5 If statement
function parseIfStatement(){var test,consequent,alternate;expectKeyword('if');expect('(');test=parseExpression();expect(')');consequent=parseStatement();if(matchKeyword('else')){lex();alternate=parseStatement();}else{alternate=null;}return delegate.createIfStatement(test,consequent,alternate);}// 12.6 Iteration Statements
function parseDoWhileStatement(){var body,test,oldInIteration;expectKeyword('do');oldInIteration=state.inIteration;state.inIteration=true;body=parseStatement();state.inIteration=oldInIteration;expectKeyword('while');expect('(');test=parseExpression();expect(')');if(match(';')){lex();}return delegate.createDoWhileStatement(body,test);}function parseWhileStatement(){var test,body,oldInIteration;expectKeyword('while');expect('(');test=parseExpression();expect(')');oldInIteration=state.inIteration;state.inIteration=true;body=parseStatement();state.inIteration=oldInIteration;return delegate.createWhileStatement(test,body);}function parseForVariableDeclaration(){var token,declarations;delegate.markStart();token=lex();declarations=parseVariableDeclarationList();return delegate.markEnd(delegate.createVariableDeclaration(declarations,token.value));}function parseForStatement(){var init,test,update,left,right,body,oldInIteration;init=test=update=null;expectKeyword('for');expect('(');if(match(';')){lex();}else{if(matchKeyword('var')||matchKeyword('let')){state.allowIn=false;init=parseForVariableDeclaration();state.allowIn=true;if(init.declarations.length===1&&matchKeyword('in')){lex();left=init;right=parseExpression();init=null;}}else{state.allowIn=false;init=parseExpression();state.allowIn=true;if(matchKeyword('in')){// LeftHandSideExpression
if(!isLeftHandSide(init)){throwErrorTolerant({},Messages.InvalidLHSInForIn);}lex();left=init;right=parseExpression();init=null;}}if(typeof left==='undefined'){expect(';');}}if(typeof left==='undefined'){if(!match(';')){test=parseExpression();}expect(';');if(!match(')')){update=parseExpression();}}expect(')');oldInIteration=state.inIteration;state.inIteration=true;body=parseStatement();state.inIteration=oldInIteration;return typeof left==='undefined'?delegate.createForStatement(init,test,update,body):delegate.createForInStatement(left,right,body);}// 12.7 The continue statement
function parseContinueStatement(){var label=null,key;expectKeyword('continue');// Optimize the most common form: 'continue;'.
if(source.charCodeAt(index)===0x3B){lex();if(!state.inIteration){throwError({},Messages.IllegalContinue);}return delegate.createContinueStatement(null);}if(peekLineTerminator()){if(!state.inIteration){throwError({},Messages.IllegalContinue);}return delegate.createContinueStatement(null);}if(lookahead.type===Token.Identifier){label=parseVariableIdentifier();key='$'+label.name;if(!Object.prototype.hasOwnProperty.call(state.labelSet,key)){throwError({},Messages.UnknownLabel,label.name);}}consumeSemicolon();if(label===null&&!state.inIteration){throwError({},Messages.IllegalContinue);}return delegate.createContinueStatement(label);}// 12.8 The break statement
function parseBreakStatement(){var label=null,key;expectKeyword('break');// Catch the very common case first: immediately a semicolon (U+003B).
if(source.charCodeAt(index)===0x3B){lex();if(!(state.inIteration||state.inSwitch)){throwError({},Messages.IllegalBreak);}return delegate.createBreakStatement(null);}if(peekLineTerminator()){if(!(state.inIteration||state.inSwitch)){throwError({},Messages.IllegalBreak);}return delegate.createBreakStatement(null);}if(lookahead.type===Token.Identifier){label=parseVariableIdentifier();key='$'+label.name;if(!Object.prototype.hasOwnProperty.call(state.labelSet,key)){throwError({},Messages.UnknownLabel,label.name);}}consumeSemicolon();if(label===null&&!(state.inIteration||state.inSwitch)){throwError({},Messages.IllegalBreak);}return delegate.createBreakStatement(label);}// 12.9 The return statement
function parseReturnStatement(){var argument=null;expectKeyword('return');if(!state.inFunctionBody){throwErrorTolerant({},Messages.IllegalReturn);}// 'return' followed by a space and an identifier is very common.
if(source.charCodeAt(index)===0x20){if(isIdentifierStart(source.charCodeAt(index+1))){argument=parseExpression();consumeSemicolon();return delegate.createReturnStatement(argument);}}if(peekLineTerminator()){return delegate.createReturnStatement(null);}if(!match(';')){if(!match('}')&&lookahead.type!==Token.EOF){argument=parseExpression();}}consumeSemicolon();return delegate.createReturnStatement(argument);}// 12.10 The with statement
function parseWithStatement(){var object,body;if(strict){throwErrorTolerant({},Messages.StrictModeWith);}expectKeyword('with');expect('(');object=parseExpression();expect(')');body=parseStatement();return delegate.createWithStatement(object,body);}// 12.10 The swith statement
function parseSwitchCase(){var test,consequent=[],statement;delegate.markStart();if(matchKeyword('default')){lex();test=null;}else{expectKeyword('case');test=parseExpression();}expect(':');while(index<length){if(match('}')||matchKeyword('default')||matchKeyword('case')){break;}statement=parseStatement();consequent.push(statement);}return delegate.markEnd(delegate.createSwitchCase(test,consequent));}function parseSwitchStatement(){var discriminant,cases,clause,oldInSwitch,defaultFound;expectKeyword('switch');expect('(');discriminant=parseExpression();expect(')');expect('{');cases=[];if(match('}')){lex();return delegate.createSwitchStatement(discriminant,cases);}oldInSwitch=state.inSwitch;state.inSwitch=true;defaultFound=false;while(index<length){if(match('}')){break;}clause=parseSwitchCase();if(clause.test===null){if(defaultFound){throwError({},Messages.MultipleDefaultsInSwitch);}defaultFound=true;}cases.push(clause);}state.inSwitch=oldInSwitch;expect('}');return delegate.createSwitchStatement(discriminant,cases);}// 12.13 The throw statement
function parseThrowStatement(){var argument;expectKeyword('throw');if(peekLineTerminator()){throwError({},Messages.NewlineAfterThrow);}argument=parseExpression();consumeSemicolon();return delegate.createThrowStatement(argument);}// 12.14 The try statement
function parseCatchClause(){var param,body;delegate.markStart();expectKeyword('catch');expect('(');if(match(')')){throwUnexpected(lookahead);}param=parseVariableIdentifier();// 12.14.1
if(strict&&isRestrictedWord(param.name)){throwErrorTolerant({},Messages.StrictCatchVariable);}expect(')');body=parseBlock();return delegate.markEnd(delegate.createCatchClause(param,body));}function parseTryStatement(){var block,handlers=[],finalizer=null;expectKeyword('try');block=parseBlock();if(matchKeyword('catch')){handlers.push(parseCatchClause());}if(matchKeyword('finally')){lex();finalizer=parseBlock();}if(handlers.length===0&&!finalizer){throwError({},Messages.NoCatchOrFinally);}return delegate.createTryStatement(block,[],handlers,finalizer);}// 12.15 The debugger statement
function parseDebuggerStatement(){expectKeyword('debugger');consumeSemicolon();return delegate.createDebuggerStatement();}// 12 Statements
function parseStatement(){var type=lookahead.type,expr,labeledBody,key;if(type===Token.EOF){throwUnexpected(lookahead);}delegate.markStart();if(type===Token.Punctuator){switch(lookahead.value){case';':return delegate.markEnd(parseEmptyStatement());case'{':return delegate.markEnd(parseBlock());case'(':return delegate.markEnd(parseExpressionStatement());default:break;}}if(type===Token.Keyword){switch(lookahead.value){case'break':return delegate.markEnd(parseBreakStatement());case'continue':return delegate.markEnd(parseContinueStatement());case'debugger':return delegate.markEnd(parseDebuggerStatement());case'do':return delegate.markEnd(parseDoWhileStatement());case'for':return delegate.markEnd(parseForStatement());case'function':return delegate.markEnd(parseFunctionDeclaration());case'if':return delegate.markEnd(parseIfStatement());case'return':return delegate.markEnd(parseReturnStatement());case'switch':return delegate.markEnd(parseSwitchStatement());case'throw':return delegate.markEnd(parseThrowStatement());case'try':return delegate.markEnd(parseTryStatement());case'var':return delegate.markEnd(parseVariableStatement());case'while':return delegate.markEnd(parseWhileStatement());case'with':return delegate.markEnd(parseWithStatement());default:break;}}expr=parseExpression();// 12.12 Labelled Statements
if(expr.type===Syntax.Identifier&&match(':')){lex();key='$'+expr.name;if(Object.prototype.hasOwnProperty.call(state.labelSet,key)){throwError({},Messages.Redeclaration,'Label',expr.name);}state.labelSet[key]=true;labeledBody=parseStatement();delete state.labelSet[key];return delegate.markEnd(delegate.createLabeledStatement(expr,labeledBody));}consumeSemicolon();return delegate.markEnd(delegate.createExpressionStatement(expr));}// 13 Function Definition
function parseFunctionSourceElements(){var sourceElement,sourceElements=[],token,directive,firstRestricted,oldLabelSet,oldInIteration,oldInSwitch,oldInFunctionBody;delegate.markStart();expect('{');while(index<length){if(lookahead.type!==Token.StringLiteral){break;}token=lookahead;sourceElement=parseSourceElement();sourceElements.push(sourceElement);if(sourceElement.expression.type!==Syntax.Literal){// this is not directive
break;}directive=source.slice(token.range[0]+1,token.range[1]-1);if(directive==='use strict'){strict=true;if(firstRestricted){throwErrorTolerant(firstRestricted,Messages.StrictOctalLiteral);}}else{if(!firstRestricted&&token.octal){firstRestricted=token;}}}oldLabelSet=state.labelSet;oldInIteration=state.inIteration;oldInSwitch=state.inSwitch;oldInFunctionBody=state.inFunctionBody;state.labelSet={};state.inIteration=false;state.inSwitch=false;state.inFunctionBody=true;while(index<length){if(match('}')){break;}sourceElement=parseSourceElement();if(typeof sourceElement==='undefined'){break;}sourceElements.push(sourceElement);}expect('}');state.labelSet=oldLabelSet;state.inIteration=oldInIteration;state.inSwitch=oldInSwitch;state.inFunctionBody=oldInFunctionBody;return delegate.markEnd(delegate.createBlockStatement(sourceElements));}function parseParams(firstRestricted){var param,params=[],token,stricted,paramSet,key,message;expect('(');if(!match(')')){paramSet={};while(index<length){token=lookahead;param=parseVariableIdentifier();key='$'+token.value;if(strict){if(isRestrictedWord(token.value)){stricted=token;message=Messages.StrictParamName;}if(Object.prototype.hasOwnProperty.call(paramSet,key)){stricted=token;message=Messages.StrictParamDupe;}}else if(!firstRestricted){if(isRestrictedWord(token.value)){firstRestricted=token;message=Messages.StrictParamName;}else if(isStrictModeReservedWord(token.value)){firstRestricted=token;message=Messages.StrictReservedWord;}else if(Object.prototype.hasOwnProperty.call(paramSet,key)){firstRestricted=token;message=Messages.StrictParamDupe;}}params.push(param);paramSet[key]=true;if(match(')')){break;}expect(',');}}expect(')');return{params:params,stricted:stricted,firstRestricted:firstRestricted,message:message};}function parseFunctionDeclaration(){var id,params=[],body,token,stricted,tmp,firstRestricted,message,previousStrict;delegate.markStart();expectKeyword('function');token=lookahead;id=parseVariableIdentifier();if(strict){if(isRestrictedWord(token.value)){throwErrorTolerant(token,Messages.StrictFunctionName);}}else{if(isRestrictedWord(token.value)){firstRestricted=token;message=Messages.StrictFunctionName;}else if(isStrictModeReservedWord(token.value)){firstRestricted=token;message=Messages.StrictReservedWord;}}tmp=parseParams(firstRestricted);params=tmp.params;stricted=tmp.stricted;firstRestricted=tmp.firstRestricted;if(tmp.message){message=tmp.message;}previousStrict=strict;body=parseFunctionSourceElements();if(strict&&firstRestricted){throwError(firstRestricted,message);}if(strict&&stricted){throwErrorTolerant(stricted,message);}strict=previousStrict;return delegate.markEnd(delegate.createFunctionDeclaration(id,params,[],body));}function parseFunctionExpression(){var token,id=null,stricted,firstRestricted,message,tmp,params=[],body,previousStrict;delegate.markStart();expectKeyword('function');if(!match('(')){token=lookahead;id=parseVariableIdentifier();if(strict){if(isRestrictedWord(token.value)){throwErrorTolerant(token,Messages.StrictFunctionName);}}else{if(isRestrictedWord(token.value)){firstRestricted=token;message=Messages.StrictFunctionName;}else if(isStrictModeReservedWord(token.value)){firstRestricted=token;message=Messages.StrictReservedWord;}}}tmp=parseParams(firstRestricted);params=tmp.params;stricted=tmp.stricted;firstRestricted=tmp.firstRestricted;if(tmp.message){message=tmp.message;}previousStrict=strict;body=parseFunctionSourceElements();if(strict&&firstRestricted){throwError(firstRestricted,message);}if(strict&&stricted){throwErrorTolerant(stricted,message);}strict=previousStrict;return delegate.markEnd(delegate.createFunctionExpression(id,params,[],body));}// 14 Program
function parseSourceElement(){if(lookahead.type===Token.Keyword){switch(lookahead.value){case'const':case'let':return parseConstLetDeclaration(lookahead.value);case'function':return parseFunctionDeclaration();default:return parseStatement();}}if(lookahead.type!==Token.EOF){return parseStatement();}}function parseSourceElements(){var sourceElement,sourceElements=[],token,directive,firstRestricted;while(index<length){token=lookahead;if(token.type!==Token.StringLiteral){break;}sourceElement=parseSourceElement();sourceElements.push(sourceElement);if(sourceElement.expression.type!==Syntax.Literal){// this is not directive
break;}directive=source.slice(token.range[0]+1,token.range[1]-1);if(directive==='use strict'){strict=true;if(firstRestricted){throwErrorTolerant(firstRestricted,Messages.StrictOctalLiteral);}}else{if(!firstRestricted&&token.octal){firstRestricted=token;}}}while(index<length){sourceElement=parseSourceElement();if(typeof sourceElement==='undefined'){break;}sourceElements.push(sourceElement);}return sourceElements;}function parseProgram(){var body;delegate.markStart();strict=false;peek();body=parseSourceElements();return delegate.markEnd(delegate.createProgram(body));}function attachComments(){var i,attacher,comment,leading,trailing;for(i=0;i<extra.pendingComments.length;++i){attacher=extra.pendingComments[i];comment=attacher.comment;leading=attacher.leading;if(leading){if(typeof leading.leadingComments==='undefined'){leading.leadingComments=[];}leading.leadingComments.push(attacher.comment);}trailing=attacher.trailing;if(trailing){if(typeof trailing.trailingComments==='undefined'){trailing.trailingComments=[];}trailing.trailingComments.push(attacher.comment);}}extra.pendingComments=[];}function filterTokenLocation(){var i,entry,token,tokens=[];for(i=0;i<extra.tokens.length;++i){entry=extra.tokens[i];token={type:entry.type,value:entry.value};if(extra.range){token.range=entry.range;}if(extra.loc){token.loc=entry.loc;}tokens.push(token);}extra.tokens=tokens;}function LocationMarker(){this.startIndex=index;this.startLine=lineNumber;this.startColumn=index-lineStart;}LocationMarker.prototype={constructor:LocationMarker,apply:function apply(node){if(extra.range){node.range=[this.startIndex,index];}if(extra.loc){node.loc={start:{line:this.startLine,column:this.startColumn},end:{line:lineNumber,column:index-lineStart}};node=delegate.postProcess(node);}if(extra.attachComment){delegate.processComment(node);}}};function createLocationMarker(){if(!extra.loc&&!extra.range){return null;}skipComment();return new LocationMarker();}function tokenize(code,options){var toString,token,tokens;toString=String;if(typeof code!=='string'&&!(code instanceof String)){code=toString(code);}delegate=SyntaxTreeDelegate;source=code;index=0;lineNumber=source.length>0?1:0;lineStart=0;length=source.length;lookahead=null;state={allowIn:true,labelSet:{},inFunctionBody:false,inIteration:false,inSwitch:false,lastCommentStart:-1};extra={};// Options matching.
options=options||{};// Of course we collect tokens here.
options.tokens=true;extra.tokens=[];extra.tokenize=true;// The following two fields are necessary to compute the Regex tokens.
extra.openParenToken=-1;extra.openCurlyToken=-1;extra.range=typeof options.range==='boolean'&&options.range;extra.loc=typeof options.loc==='boolean'&&options.loc;if(typeof options.comment==='boolean'&&options.comment){extra.comments=[];}if(typeof options.tolerant==='boolean'&&options.tolerant){extra.errors=[];}if(length>0){if(typeof source[0]==='undefined'){// Try first to convert to a string. This is good as fast path
// for old IE which understands string indexing for string
// literals only and not for string object.
if(code instanceof String){source=code.valueOf();}}}try{peek();if(lookahead.type===Token.EOF){return extra.tokens;}token=lex();while(lookahead.type!==Token.EOF){try{token=lex();}catch(lexError){token=lookahead;if(extra.errors){extra.errors.push(lexError);// We have to break on the first error
// to avoid infinite loops.
break;}else{throw lexError;}}}filterTokenLocation();tokens=extra.tokens;if(typeof extra.comments!=='undefined'){tokens.comments=extra.comments;}if(typeof extra.errors!=='undefined'){tokens.errors=extra.errors;}}catch(e){throw e;}finally{extra={};}return tokens;}function parse(code,options){var program,toString;toString=String;if(typeof code!=='string'&&!(code instanceof String)){code=toString(code);}delegate=SyntaxTreeDelegate;source=code;index=0;lineNumber=source.length>0?1:0;lineStart=0;length=source.length;lookahead=null;state={allowIn:true,labelSet:{},inFunctionBody:false,inIteration:false,inSwitch:false,lastCommentStart:-1,markerStack:[]};extra={};if(typeof options!=='undefined'){extra.range=typeof options.range==='boolean'&&options.range;extra.loc=typeof options.loc==='boolean'&&options.loc;extra.attachComment=typeof options.attachComment==='boolean'&&options.attachComment;if(extra.loc&&options.source!==null&&options.source!==undefined){extra.source=toString(options.source);}if(typeof options.tokens==='boolean'&&options.tokens){extra.tokens=[];}if(typeof options.comment==='boolean'&&options.comment){extra.comments=[];}if(typeof options.tolerant==='boolean'&&options.tolerant){extra.errors=[];}if(extra.attachComment){extra.range=true;extra.pendingComments=[];extra.comments=[];}}if(length>0){if(typeof source[0]==='undefined'){// Try first to convert to a string. This is good as fast path
// for old IE which understands string indexing for string
// literals only and not for string object.
if(code instanceof String){source=code.valueOf();}}}try{program=parseProgram();if(typeof extra.comments!=='undefined'){program.comments=extra.comments;}if(typeof extra.tokens!=='undefined'){filterTokenLocation();program.tokens=extra.tokens;}if(typeof extra.errors!=='undefined'){program.errors=extra.errors;}if(extra.attachComment){attachComments();}}catch(e){throw e;}finally{extra={};}return program;}// Sync with *.json manifests.
exports.version='1.1.1';exports.tokenize=tokenize;exports.parse=parse;// Deep copy.
exports.Syntax=function(){var name,types={};if(typeof Object.create==='function'){types=Object.create(null);}for(name in Syntax){if(Syntax.hasOwnProperty(name)){types[name]=Syntax[name];}}if(typeof Object.freeze==='function'){Object.freeze(types);}return types;}();});/* vim: set sw=4 ts=4 et tw=80 : */

//# sourceMappingURL=esprima-compiled.js.map