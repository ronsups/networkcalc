{"version":3,"sources":["mock_sync.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,KAAR,CAAd;;AAEA,KAAK,MAAL,EAAa,UAAU,CAAV,EAAa;AACtB,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,QAAQ;AACR,2BAAoB;AADZ,KAAZ;;AAIA,aAAS,IAAT,CAAe,OAAf,EAAwB;AACpB,eAAO;AACH,qBAAU,OADP;AAEH,oBAAS,gBAAU,IAAV,EAAgB;AACrB,uBAAO,MAAM,cAAN,CAAqB,IAArB,CAAP;AACH,aAJE;AAKH,0BAAe,sBAAU,IAAV,EAAgB;AAC3B,uBAAO,MAAM,IAAN,CAAP;AACH;AAPE,SAAP;AASH;;AAED,MAAE,KAAF,CACI,QAAQ,IAAR,CAAa,OAAb,EAAsB,KAAK,UAAL,CAAtB,CADJ,EAEI,iBAFJ;;AAKA,MAAE,KAAF,CACI,QAAQ,IAAR,CAAa,UAAb,EAAyB,KAAK,UAAL,CAAzB,CADJ,EAEI,iBAFJ;;AAKA,MAAE,MAAF,CAAS,YAAY;AACjB,gBAAQ,IAAR,CAAa,KAAb,EAAoB,KAAK,UAAL,CAApB;AACH,KAFD;;AAIA,MAAE,MAAF,CAAS,YAAY;AACjB,gBAAQ,IAAR,CAAa,QAAb,EAAuB,KAAK,UAAL,CAAvB;AACH,KAFD;AAGH,CApCD;;AAsCA,KAAK,cAAL,EAAqB,UAAU,CAAV,EAAa;AAC9B,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,QAAQ;AACR,wCAAiC,MADzB;AAER,8CAAuC,KAAK,SAAL,CAAe;AAClD,kBAAO;AAD2C,SAAf;AAF/B,KAAZ;;AAOA,aAAS,IAAT,CAAe,OAAf,EAAwB;AACpB,eAAO;AACH,qBAAU,OADP;AAEH,oBAAS,gBAAU,IAAV,EAAgB;AACrB,uBAAO,MAAM,cAAN,CAAqB,IAArB,CAAP;AACH,aAJE;AAKH,0BAAe,sBAAU,IAAV,EAAgB;AAC3B,uBAAO,MAAM,IAAN,CAAP;AACH;AAPE,SAAP;AASH;;AAED,MAAE,KAAF,CACI,QAAQ,IAAR,CAAa,KAAb,EAAoB,KAAK,MAAL,CAApB,CADJ,EAEI,8BAFJ;AAIH,CA1BD","file":"mock_sync-compiled.js","sourcesContent":["var test = require('tape');\nvar resolve = require('../');\n\ntest('mock', function (t) {\n    t.plan(4);\n    \n    var files = {\n        '/foo/bar/baz.js' : 'beep'\n    };\n    \n    function opts (basedir) {\n        return {\n            basedir : basedir,\n            isFile : function (file) {\n                return files.hasOwnProperty(file)\n            },\n            readFileSync : function (file) {\n                return files[file]\n            }\n        }\n    }\n    \n    t.equal(\n        resolve.sync('./baz', opts('/foo/bar')),\n        '/foo/bar/baz.js'\n    );\n    \n    t.equal(\n        resolve.sync('./baz.js', opts('/foo/bar')),\n        '/foo/bar/baz.js'\n    );\n    \n    t.throws(function () {\n        resolve.sync('baz', opts('/foo/bar'));\n    });\n\n    t.throws(function () {\n        resolve.sync('../baz', opts('/foo/bar'));\n    });\n});\n\ntest('mock package', function (t) {\n    t.plan(1);\n    \n    var files = {\n        '/foo/node_modules/bar/baz.js' : 'beep',\n        '/foo/node_modules/bar/package.json' : JSON.stringify({\n            main : './baz.js'\n        })\n    };\n    \n    function opts (basedir) {\n        return {\n            basedir : basedir,\n            isFile : function (file) {\n                return files.hasOwnProperty(file)\n            },\n            readFileSync : function (file) {\n                return files[file]\n            }\n        }\n    }\n    \n    t.equal(\n        resolve.sync('bar', opts('/foo')),\n        '/foo/node_modules/bar/baz.js'\n    );\n});\n"]}