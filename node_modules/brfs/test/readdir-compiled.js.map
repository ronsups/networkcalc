{"version":3,"sources":["readdir.js"],"names":[],"mappings":";;AAAA,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,OAAO,QAAQ,KAAR,EAAe,IAA1B;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,KAAK,SAAL,EAAgB,UAAS,CAAT,EAAY;AACxB,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,GAAG,WAAH,CAAe,YAAY,QAA3B,CAAf;AACA,QAAI,IAAI,WAAW,YAAY,mBAAvB,CAAR;AACA,MAAE,SAAF,CAAY,KAAK,OAAL,CAAa,SAAb,CAAZ;AACA,MAAE,MAAF,CAAS,UAAS,GAAT,EAAc,GAAd,EAAmB;AACxB,YAAI,GAAJ,EAAS,EAAE,IAAF,CAAO,GAAP;AACT,WAAG,eAAH,CAAmB,GAAnB,EAAwB;AACpB,qBAAS,EAAE,KAAK,GAAP,EADW;AAEpB,wBAAY;AAFQ,SAAxB;AAIH,KAND;;AAQA,aAAS,GAAT,CAAa,MAAb,EAAqB;AACjB,UAAE,SAAF,CAAY,QAAZ,EAAsB,MAAtB;AACH;AACJ,CAjBD;;AAmBA,KAAK,aAAL,EAAoB,UAAS,CAAT,EAAY;AAC5B,MAAE,IAAF,CAAO,CAAP;;AAEA,QAAI,WAAW,GAAG,WAAH,CAAe,YAAY,QAA3B,CAAf;AACA,QAAI,IAAI,WAAW,YAAY,wBAAvB,CAAR;AACA,MAAE,SAAF,CAAY,KAAK,OAAL,CAAa,SAAb,CAAZ;AACA,MAAE,MAAF,CAAS,UAAS,GAAT,EAAc,GAAd,EAAmB;AACxB,YAAI,GAAJ,EAAS,EAAE,IAAF,CAAO,GAAP;AACT,WAAG,eAAH,CAAmB,GAAnB,EAAwB;AACpB,qBAAS,EAAE,KAAK,GAAP;AADW,SAAxB;AAGH,KALD;;AAOA,aAAS,GAAT,CAAa,MAAb,EAAqB;AACjB,UAAE,SAAF,CAAY,QAAZ,EAAsB,MAAtB;AACH;AACJ,CAhBD","file":"readdir-compiled.js","sourcesContent":["var browserify = require('browserify');\nvar test = require('tap').test;\n\nvar path = require('path');\nvar vm = require('vm');\nvar fs = require('fs');\n\ntest('readdir', function(t) {\n    t.plan(1);\n\n    var expected = fs.readdirSync(__dirname + '/files');\n    var b = browserify(__dirname + '/files/readdir.js');\n    b.transform(path.dirname(__dirname));\n    b.bundle(function(err, src) {\n        if (err) t.fail(err);\n        vm.runInNewContext(src, {\n            console: { log: log },\n            setTimeout: setTimeout\n        });\n    });\n\n    function log(actual) {\n        t.deepEqual(expected, actual);\n    }\n});\n\ntest('readdirSync', function(t) {\n    t.plan(1);\n\n    var expected = fs.readdirSync(__dirname + '/files');\n    var b = browserify(__dirname + '/files/readdir-sync.js');\n    b.transform(path.dirname(__dirname));\n    b.bundle(function(err, src) {\n        if (err) t.fail(err);\n        vm.runInNewContext(src, {\n            console: { log: log }\n        });\n    });\n\n    function log(actual) {\n        t.deepEqual(expected, actual);\n    }\n});\n"]}